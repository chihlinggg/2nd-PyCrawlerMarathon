[<p><b>可延伸標記式語言</b>（英語：<span lang="en">E<b>x</b>tensible <b>M</b>arkup <b>L</b>anguage</span>，簡稱：<span lang="en"><b>XML</b></span>）是一種<a class="mw-redirect" href="/wiki/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80" title="標記式語言">標記式語言</a>。標記指<a class="mw-redirect" href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA" title="電腦">電腦</a>所能理解的資訊符號，通過此種標記，<a class="mw-redirect" href="/wiki/%E9%9B%BB%E8%85%A6" title="電腦">電腦</a>之間可以處理包含各種資訊的文章等。如何定義這些標記，既可以選擇國際通用的標記式語言，比如<a href="/wiki/HTML" title="HTML">HTML</a>，也可以使用像XML這樣由相關人士自由決定的標記式語言，這就是語言的可延伸性。XML是從<a class="mw-redirect" href="/wiki/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80" title="標準通用標記式語言">標準通用標記式語言</a>（SGML）中簡化修改出來的。它主要用到的有可延伸標記式語言、<a href="/wiki/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%B7%E5%BC%8F%E8%AF%AD%E8%A8%80" title="可延伸樣式語言">可延伸樣式語言</a>（XSL）、<a href="/wiki/XBRL" title="XBRL">XBRL</a>和<a href="/wiki/XPath" title="XPath">XPath</a>等。
</p>, <p>XML的前身是<b>SGML</b>（<span lang="en">The <b>S</b>tandard <b>G</b>eneralized <b>M</b>arkup <b>L</b>anguage</span>），是自IBM從1960年代就開始發展的<b><a class="new" href="/w/index.php?title=%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80&amp;action=edit&amp;redlink=1" title="通用標記式語言（頁面不存在）">GML</a></b>（<span lang="en"><b>G</b>eneralized <b>M</b>arkup <b>L</b>anguage</span>）標準化後的名稱。
</p>, <p>GML的重要概念：
</p>, <p>1978年，<a class="mw-redirect" href="/wiki/ANSI" title="ANSI">ANSI</a>將GML加以整理規範，發布成為SGML，1986年起為<a class="mw-redirect" href="/wiki/ISO" title="ISO">ISO</a>所採用（ISO 8879），並且被廣泛地運用在各種大型的檔案計劃中，但是SGML是一種非常嚴謹的檔案描述法，導致過於龐大複雜（標準手冊就有500多頁），難以理解和學習，進而影響其推廣與應用。
</p>, <p>同時W3C也發現到HTML的問題：
</p>, <p>為了解決以上問題，專家們使用SGML精簡製作，並依照HTML的發展經驗，產生出一套使用上規則嚴謹，但是簡單的描述資料語言：XML。
</p>, <p>XML是在一個這樣的背景下誕生的——為了有一個更中立的方式，讓消費端自行決定要如何消化、呈現從伺服器端所提供的資訊。
</p>, <p>XML是從1995年開始有其雛形，並向<a class="mw-redirect" href="/wiki/W3C" title="W3C">W3C</a>（<a href="/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" title="全球資訊網協會">全球資訊網聯盟</a>）提案，而在1998年二月發布為W3C的標準（XML1.0）。
</p>, <p>XML被廣泛用來作為跨平台之間互動資料的形式，主要針對資料的內容，通過不同的格式化描述手段（XSLT，CSS等）可以完成最終的形式表達（生成對應的HTML，PDF或者其他的檔案格式）。
</p>, <p>XML設計用來傳送及攜帶資料資訊，不用來表現或展示資料，<a href="/wiki/HTML" title="HTML">HTML</a>則用來表現資料，所以XML用途的焦點是它說明資料是什麼，以及攜帶資料資訊。
</p>, <p>XML 1.0規範允許的（跳脫後的最終解碼值）合法字元： #x9（水平制表符）、#xA（回車字元）、#xD（換行符）、#x20-#xD7FF、#xE000-#xFFFD、#x10000-#x10FFFF。即任何Unicode字元，不包含surrogate blocks, FFFE,  FFFF。
</p>, <p>XML規範定義了5個"預定義實體"來表示特殊字元. XML也允許在每個文件定義任意數量的其它命名實體.
</p>, <p>下表列出了5個XML預定義實體. 通過名字參照這些實體的格式為<code>&amp;name;</code>，例如, <code>&amp;amp;</code> 將繪製為&amp;. 
</p>, <p>XML處理器（Processor，也稱作XML parser）分析標記式語言並傳遞結構化資訊給應用（application）。
</p>, <p>XML文件的字元分為標記（Markup）與內容（content）兩類。標記通常以<code>&lt;</code>開頭，以<code>&gt;</code>結尾；或者以字元<code>&amp;</code> 開頭，以<code>;</code>結尾。不是標記的字元就是內容。但是<a href="/wiki/CDATA" title="CDATA">CDATA</a>部分，分解符號<code>&lt;![CDATA[</code>與<code>]]&gt;</code>是標記，二者之間的文字為內容。 最外界的空白符是標記。
</p>, <p>一個<i>tag</i>屬於標記結構，以<code>&lt;</code>開頭，以<code>&gt;</code>結尾。Tag名字是大小寫敏感，不能包括任何字元 !"#$%&amp;'()*+,/;&lt;=&gt;?@[\]^`{|}~， 也不能有空格符， 不能以"-"或"."或數字開始。可分為三類：
</p>, <p>元素是文件邏輯組成，或者在start-tag與匹配的end-tag之間，或者僅作為一個empty-element tag。例如：<code>&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</code>. 另一個例子是： <code>&lt;line-break /&gt;</code>.
</p>, <p>單個根（root）元素包含所有的其他元素。
</p>, <p>屬性是一種標記結構，在start-tag或empty-element tag內部的「名字-值對」。例如：<code>&lt;img src="madonna.jpg" alt="Madonna" /&gt;</code>。每個元素中，一個屬性最多出現一次，一個屬性只能有一個值。
</p>, <p>如果屬性有多個值，這需要採取XML協定以外的方式來表示，如採用逗號或分號間隔，對於<a class="mw-redirect" href="/wiki/CSS" title="CSS">CSS</a>類或識別碼的名字可用空格來分隔。 
</p>, <p>XML文件如果以<i>XML declaration</i>開始，則表述了文件的一些資訊。如<code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</code>.
</p>, <p>XML定義結構、儲存資訊、傳送資訊。下例為小張傳送給大元的便條，儲存為XML。
</p>, <p>這XML文件僅是純粹的資訊標籤，這些標籤意義的展開依賴於應用它的程式。
</p>, <p>每個XML文件都由XML序言開始，在前面的代碼中的第一行就是XML序言，&lt;?xml version="1.0"?&gt;。這一行代碼會告訴解析器或瀏覽器這個檔案應該按照XML規則進行解析。
</p>, <p>但是，根元素到底叫&lt;小紙條&gt;還是&lt;小便條&gt;，則是由<a href="/wiki/%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89" title="文件類型定義">文件類型定義</a>（DTD）或<a href="/wiki/XML_Schema" title="XML Schema">XML綱要</a>（XML Schema）定義的。如果DTD規定根元素必須叫&lt;小便條&gt;，那麼若寫作&lt;小紙條&gt;就不符合要求。這種不符合DTD或XML綱要的要求的XML文件，被稱作<b>不合法的XML</b>，反之則是<b>合法的XML</b>。
</p>, <p>XML檔案的第二行並不一定要包含文件元素；如果有注釋或者其他內容，文件元素可以遲些出現。
</p>, <p>最常見的PI（processing instruction,像XML序言, 卻是不同類型的語法）是用來指定XML檔案的樣式表, 這個PI一般會直接放在XML序言之後，通常由Web瀏覽器使用，來將XML資料以特殊的樣式顯示出來。
</p>, <p>XML的結構有一個缺陷，那就是不支援分影格（framing）。當多條XML訊息在TCP上傳輸的時候，無法基於XML協定來確定一條XML訊息是否已經結束。
</p>, <p class="mw-empty-elt">
</p>]