[<p><b>登錄檔</b>（英語：<span lang="en">Registry</span>，中國大陸譯作<b>註冊表</b>，台灣、港、澳譯作<b>登錄檔</b>）是<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>中的一個重要的<a href="/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93" title="資料庫">資料庫</a>，用於儲存系統和應用程式的設定資訊。早在<a class="mw-redirect" href="/wiki/Windows" title="Windows">Windows</a> 3.0推出<a class="mw-redirect" href="/wiki/OLE" title="OLE">OLE</a>技術的時候，登錄檔就已經出現。隨後推出的<a href="/wiki/Windows_NT" title="Windows NT">Windows NT</a>是第一個從系統級別廣泛使用登錄檔的作業系統。但是，從<a href="/wiki/Windows_95" title="Windows 95">Windows 95</a>開始，登錄檔才真正成為Windows使用者經常接觸的內容，並在其後的作業系統中繼續沿用至今。
</p>, <p>登錄檔由鍵（key，或稱「項」）、子鍵（subkey，子項）和值項（value）構成。一個鍵就是樹狀資料結構中的一個節點，而子鍵就是這個節點的子節點，子鍵也是鍵。一個值項則是一個鍵的一條內容，由名稱（name）、資料類型（datatype）以及資料（data）組成。一個鍵可以有一個或多個值，每個值的名稱各不相同，如果一個值的名稱為空，則該值為該鍵的預設值。
</p>, <p>在登錄編輯程式（Regedit.exe）中，資料結構顯示如下，其中，<b>command</b>鍵是<b>open</b>鍵的子鍵，<b>(預設)</b>表示該值是預設值，值名稱為空，其資料類型為<b>REG_SZ</b>，資料值為<b>%systemroot%\system32\NOTEPAD.EXE "%1</b>
</p>, <p><span style="display:inline-block; border:1px solid #ddd;"><a class="image" href="/wiki/File:Regedit-txtfile.png"><img alt="Regedit-txtfile.png" data-file-height="82" data-file-width="596" decoding="async" height="82" src="//upload.wikimedia.org/wikipedia/zh/1/1f/Regedit-txtfile.png" width="596"/></a></span>
</p>, <p>以上資訊的意義是：txt類型的檔案在右鍵清單里的「開啟」一項使用的程式是「NOTEPAD.EXE」，即用記事本開啟檔案。
</p>, <p>登錄檔的資料類型主要有以下五種：
</p>, <p>此外，登錄檔還有其他的資料類型，但是均不常用：
</p>, <p>登錄檔有五個一級分支，下面是這五個分支的名稱及作用：
</p>, <p>登錄檔的儲存位置隨著Windows的版本變化而不同。尤其是<a href="/wiki/Windows_NT" title="Windows NT">Windows NT</a>系列作業系統和<a href="/wiki/Windows_95" title="Windows 95">Windows 95</a>系列的儲存方式有很大區別。登錄檔被分成多個檔案儲存，稱為Registry Hives，每一個檔案被稱為一個組態單元。
</p>, <p>在早期的Windows 3.x系列中，登錄檔僅包含一個reg.dat檔案，所存放的內容後來演變為HKEY_CLASSES_ROOT分支。
</p>, <p>Windows NT家族的組態單元檔案：
</p>, <p>Windos95家族的設定檔
</p>, <p><a class="mw-redirect" href="/wiki/Microsoft" title="Microsoft">Microsoft</a>公司不建議使用者自行更改登錄檔，因為如果對登錄檔進行了不當修改，就有可能造成Windows系統的某些功能失效，甚至導致系統崩潰。但是，Microsoft公司仍然在Windows中提供了<a class="new" href="/w/index.php?title=%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%BC%96%E8%BE%91%E5%99%A8&amp;action=edit&amp;redlink=1" title="登錄編輯程式（頁面不存在）">登錄編輯程式</a>，它位於<tt>%systemroot%\regedit.exe</tt>。在<a href="/wiki/Windows_NT" title="Windows NT">Windows NT</a>中使用的則是介面有所不同的<tt>REGEDT32.exe</tt>。而在<a href="/wiki/Windows_2000" title="Windows 2000">Windows 2000</a>中，兩個程式同時存在於系統中。部份的原因是Windows 2000版本的<tt>regedit.exe</tt>尚不支援對登錄檔資料設定安全性。但在<a href="/wiki/Windows_XP" title="Windows XP">Windows XP</a>及以後的作業系統中，<tt>regedit.exe</tt>已經能夠支援登錄檔安全設定了，因此<tt>REGEDT32.exe</tt>失去了存在的必要。不過它仍被保留，只是該程式執行時僅僅會自動呼叫regedit.exe<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup>。
</p>, <p>除了編輯本台電腦上登錄檔資料之外，登錄編輯程式亦可以通過檔案清單下的「載入組態單元」清單項編輯直接編輯檔案系統上的登錄檔資料檔案。該功能可以允許使用者開啟檔案系統中的RegHive檔案，並將其中的資料對映到<tt>HKEY_USERS</tt>或者<tt>HKEY_LOCAL_MACHINE</tt>項下的一個子項之中。<sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup>
</p>, <p>Windows內建了一個管理登錄檔的命令行工具——<b>reg</b>。只需在<a class="mw-redirect" href="/wiki/%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6" title="命令提示字元">命令提示字元</a>中執行並指定參數，即可以命令行的形式對登錄檔進行各項管理操作。支援的操作有增刪改查、匯入匯出登錄檔檔案（reg檔案）、匯入匯出或載入組態單元（RegHive）等。
</p>, <p>在Windows 98以後的作業系統中，增加了一個<a class="new" href="/w/index.php?title=Windows%E8%84%9A%E6%9C%AC%E5%AE%BF%E4%B8%BB&amp;action=edit&amp;redlink=1" title="Windows指令碼宿主（頁面不存在）">手稿語言直譯器</a>，可以用來執行一些系統任務。它可以支援VBScript和JavaScript兩種手稿語言，都提供了存取登錄檔的功能。某些<a href="/wiki/%E7%97%85%E6%AF%92" title="病毒">病毒</a>就利用這一點通過修改登錄檔進行傳播。
</p>, <p>存取登錄檔的系統功能對編程人員是開放的，因此有許多軟體都有讀寫登錄檔的功能。事實上，Windows平台下開發的軟體幾乎都在不同程度上修改登錄檔，以便儲存一些在程式多次執行之間需要保留的資訊，以及讓軟體可以通過某種特定方式（例如，右鍵清單）啟動。也有一些軟體是專門開發出來對登錄檔進行最佳化和設定的。
</p>, <p>reg檔案也是一種修改登錄檔的方式。在登錄編輯程式中，使用者可以通過「檔案」清單中的「匯出」清單項來備份登錄檔中的某些專案到一個reg檔案之中；之後使用者可以再次通過「匯入」清單項將這些專案還原。reg檔案本身也在系統中被關聯到regedit.exe，因此直接雙擊開啟reg檔案也會起到將其中的專案匯入到登錄檔中的效果。
</p>, <p>而事實上，reg檔案是根據一定格式編寫的純文字檔案。因此，熟練的使用者可以直接使用文字編輯器（比如<a class="mw-redirect" href="/wiki/%E8%AE%B0%E4%BA%8B%E6%9C%AC" title="記事本">記事本</a>）來建立自己的reg檔案，這樣做無需在登錄檔中根據路徑一級一級地存取，而且可以直接對大量專案進行批次修改。這些檔案還可以被分發給非專業的使用者，說明他們快速地完成登錄檔的編輯，以減少出錯的可能。
</p>, <p><a class="mw-redirect" href="/wiki/Windows_SDK" title="Windows SDK">Windows SDK</a>提供了存取登錄檔的介面。建立或開啟的鍵，必須作為目前已經開啟的鍵的子鍵。HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS,  HKEY_CURRENT_USER等預定義的鍵總是已經開啟。使用RegOpenKeyEx開啟鍵；使用RegCreateKeyEx建立鍵。登錄檔允許最大512層子鍵深度。通過一個登錄檔API呼叫允許一次開啟或建立32層深度的登錄檔的子鍵。 RegCloseKey關閉已經開啟的鍵，把資料寫回登錄檔。RegFlushKey把記憶體中快取的登錄檔已修改資料寫回到硬碟上，因此代價高昂，要慎重呼叫。
</p>, <p>RegSetValueEx把一個值項與其資料關聯到一個鍵上。RegDeleteVaule從鍵上刪除一個值項。RegDeleteKey刪除一個鍵，但直到關閉相應的登錄檔控制代碼（handle）才真正完成刪除操作。
</p>, <p>RegEnumKeyEx列舉一個鍵下的所有子鍵。RegEnumValue列舉一個鍵下的所有值項。RegQueryValueEx取得一個值項的資料。
</p>, <p>RegSaveKeyEx可以把一個鍵及所有子鍵儲存到一個檔案中。RegLoadKey把一個登錄檔檔案裝入到系統的登錄檔，RegUnLoadKey把系統登錄檔恢復到原狀態。
</p>, <p>最初，<a class="mw-redirect" href="/wiki/Windows" title="Windows">Windows</a>系統及應用程式的資訊被儲存在字尾名為<a href="/wiki/INI%E6%96%87%E4%BB%B6" title="INI檔案">ini</a>的<a href="/wiki/%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6" title="文字檔案">文字檔案</a>中，這就是登錄檔的前身。但是這麼做有著致命弱點：因為每一個程式都會新安裝一個或多個ini檔案，來儲存程序資訊，導致資訊的分布極為零亂；而且在16位元系統下，ini檔案的大小必須在64KB之內。所以ini檔案被認為不便於使用和管理。
</p>, <p>在最早出現於Windows 3.0的<a class="mw-redirect" href="/wiki/OLE" title="OLE">OLE</a>技術出現後，微軟為了存放系統中大量的軟體組件資訊，組織了一個reg.dat的資料庫來存放這些資訊。當時的登錄編輯程式為16位元版本的regedit.exe，功能較弱。
</p>, <p>後來開發的<a href="/wiki/Windows_NT" title="Windows NT">Windows NT</a>則更進一步使用相同的檔案格式來存放系統的組態資訊，以取代原有的ini檔案。該系統為每一個使用者在使用者目錄下建立了一個自身的登錄檔空間，而系統的設定被存放在系統資料夾中。由於Windows NT是一個32位元作業系統，regedit.exe被升級為regedt32.exe，並增加了對權限的設定功能。
</p>, <p>在<a href="/wiki/Windows_95" title="Windows 95">Windows 95</a>中，登錄檔首次得到廣泛套用，逐漸淘汰了原有的ini檔案。程式在安裝時，不再將資料寫入ini檔案，而直接寫入登錄檔。為了最大限度相容舊程式，部份原來用於讀寫ini檔案的專門<a class="mw-redirect" href="/wiki/API" title="API">API</a>函式仍然可用，但現在是存取登錄檔（寫入或讀取）。Windows 95為了保持和Windows 3.x系列的相容性，登錄檔的架構與Windows NT不同，為此專門開發了另一個32位元版本的regedit.exe，它沒有設定權限的功能。
</p>, <p>在<a href="/wiki/Windows_2000" title="Windows 2000">Windows 2000</a>中，由於Windows 95家族已經深入人心，regedit.exe也得到廣泛套用，相反regedt32.exe的介面相對比較醜陋，因此微軟將windows 95系列的regedit.exe拿過來用。但由於移植過來的regedit.exe仍沒有權限設定的功能，regedt32.exe仍然保留在系統中用作權限設定。
</p>, <p>到<a href="/wiki/Windows_XP" title="Windows XP">Windows XP</a>和<a href="/wiki/Windows_Server_2003" title="Windows Server 2003">Windows Server 2003</a>中，regedit.exe已經增加了權限的功能，regedt32.exe由於失去作用而被剔除。同時，這個版本的登錄檔是64位元的，這導致了一些相容性問題，少數可以執行在舊版本Windows的程式在<a href="/wiki/Windows_XP" title="Windows XP">Windows XP</a>中無法運作。
</p>, <p>64位元Windows中的登錄檔結構大致與32位元版本相同，但32位元程式的資訊被放在HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node而不是HKEY_LOCAL_MACHINE\SOFTWARE（64位元程式的資訊放於此處）。
</p>, <p>關於分散的文字檔案和集中的登錄檔兩種軟體組態方式的優劣，目前仍有爭論。主流作業系統中，<a class="mw-redirect" href="/wiki/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="Linux作業系統">Linux作業系統</a>一直使用單獨的文字檔案來存放組態資訊。而Windows平台下基於<a href="/wiki/.NET%E6%A1%86%E6%9E%B6" title=".NET框架">.NET框架</a>的軟體對登錄檔的依賴性也大大減弱。事實上，.NET軟體通常使用純文字的<a href="/wiki/XML" title="XML">XML</a>（稱為app.config）檔案而不是登錄檔進行組態，這在某種意義上是向當初的ini文字組態方式的一種回歸。部份<a class="mw-redirect" href="/wiki/%E7%BB%BF%E8%89%B2%E8%BD%AF%E4%BB%B6" title="可攜式軟體">可攜式軟體</a>支持者認為，集中式的登錄檔要求軟體需要進行專門的安裝步驟才可以正常執行，而單獨的文字設定檔則可以不需要安裝，只要將軟體的檔案目錄拷貝過來就可以使用；當不再需要軟體的時候，除刪除相關檔案外對於登錄檔也需要進行移除步驟，才有可能不在系統中留下痕跡（很多軟體即使提供了移除步驟，仍然會留下痕跡），如果使用文字設定檔，則能做得更乾淨。但是，文字組態方式導致某些系統軟體的組態較為困難且缺乏統一的介面（如Linux中的情況），也是不爭的事實，儘管現在已經有很多軟體可以方便進行系統設定，但仍存在標準不夠統一的問題。
</p>, <p>著名開源軟體<a class="new" href="/w/index.php?title=Fetchmail&amp;action=edit&amp;redlink=1" title="Fetchmail（頁面不存在）">Fetchmail</a>的作者Eric S. Raymond在《UNIX編程藝術》一書中有如下敘述<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>：
<style data-mw-deduplicate="TemplateStyles:r51231769">.mw-parser-output .templatequote{margin-top:0;overflow:hidden}.mw-parser-output .templatequote .templatequotecite{line-height:1em;text-align:left;padding-left:2em;margin-top:0}.mw-parser-output .templatequote .templatequotecite cite{font-size:small}</style>
</p>, <p>對比terminfo資料庫和Windows登錄檔，我們發現登錄檔出名地容易受到錯誤程式碼的破壞。這可能會使整個系統都無法使用。即使系統沒有癱瘓，但如果破壞本身干擾了專用的登錄檔編輯工具，恢復工作就會很困難。</p>, <p>從2000年以來部份惡性<a class="mw-redirect" href="/wiki/%E7%94%B5%E8%84%91%E7%97%85%E6%AF%92" title="電腦病毒">病毒</a>如<a href="/wiki/%E7%86%8A%E7%8C%AB%E7%83%A7%E9%A6%99" title="熊貓燒香">熊貓燒香</a>等的破壞情形看，的確存在「破壞本身干擾登錄編輯程式」的問題。在某些情況下，病毒程式會監視系統處理程序列表，並強行關閉名為regedit的任何程式。這使得受損使用者難以直接通過編輯登錄檔進行恢復。
</p>, <p>登錄檔是Windows作業系統的核心，越來越多的駭客程式將攻擊物件轉向了登錄檔。一些程式（尤其是惡意程式），為了達到隨系統自動啟動的目的，會在登錄檔建立啟動項，因此監控登錄檔能夠有效地預防該類惡意程式的攻擊。<sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup>
</p>, <p>不當使用「登錄編輯程式」可能會造成嚴重的問題，甚至可能需要重新安裝作業系統。無法保證能夠順利解決因不當使用「登錄編輯程式」所造成的問題。您必須自行承擔使用「登錄編輯程式」的風險。建議您在編輯登入前，先行備份。
</p>]