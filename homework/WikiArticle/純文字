[<p><b>文字檔案</b>一般指只有字元原生編碼構成的二進位電腦檔案，與<a class="mw-redirect" href="/wiki/%E5%AF%8C%E6%96%87%E6%9C%AC" title="富文字">富文字</a>相比，其不包含字樣樣式的控制元素，能夠被最簡單的<a href="/wiki/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8" title="文字編輯器">文字編輯器</a>直接讀取。
</p>, <p>由於結構簡單，文字檔案被廣泛用於記錄資訊。它能夠避免其它檔案格式遇到的一些問題。此外，當文字檔案中的部分資訊出現錯誤時，往往能夠比較容易的從錯誤中恢復出來，並繼續處理其餘的內容。文字檔案的一個缺點是，它的<a href="/wiki/%E7%86%B5_(%E4%BF%A1%E6%81%AF%E8%AE%BA)" title="熵 (資訊理論)">熵</a>往往較低，也就是說，其實本可以用更小的儲存空間記錄這些資訊。
</p>, <p><a href="/wiki/ASCII" title="ASCII">ASCII</a>標準使得只含有ASCII字元的文字檔案可以在<a class="mw-redirect" href="/wiki/Unix" title="Unix">Unix</a>、<a class="mw-redirect" href="/wiki/Macintosh" title="Macintosh">Macintosh</a>、<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>、<a href="/wiki/DOS" title="DOS">DOS</a>和其它<a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>之間自由互動，而其它格式的檔案是很難做到這一點的。但是，在這些作業系統中，<a href="/wiki/%E6%8F%9B%E8%A1%8C" title="換行">換行</a>符並不相同，處理非ASCII字元的方式也不一致。
</p>, <p>文字檔案在<a class="mw-redirect" href="/wiki/MIME" title="MIME">MIME</a>標準中的類型為「text/plain」，此外，它通常還附加編碼的資訊。在<a class="mw-redirect" href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>出現前，當<i><span class="ilh-all" data-foreign-title="Resource fork" data-lang-code="en" data-lang-name="英語" data-orig-title="Resource fork"><span class="ilh-page"><a class="new" href="/w/index.php?title=Resource_fork&amp;action=edit&amp;redlink=1" title="Resource fork（頁面不存在）">Resource fork</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Resource_fork" title="en:Resource fork"><span dir="auto" lang="en">Resource fork</span></a></span>）</span></span></i>指定某一個檔案的類型為「TEXT」時，<a class="mw-redirect" href="/wiki/Mac_OS" title="Mac OS">Mac OS</a>就認為這個檔案是文字檔案。在Windows中，當一個檔案的<a href="/wiki/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D" title="副檔名">副檔名</a>為「txt」時，系統就認為它是一個文字檔案。此外，處於特殊的目的，有些文字檔案使用其它的副檔名。例如，電腦的原始碼也是文字檔案，它們的字尾是用來指明它的程式語言的。
</p>, <p>.txt是包含極少格式資訊的文字檔案的副檔名。.txt格式並沒有明確的定義，它通常是指那些能夠被系統<a href="/wiki/%E7%B5%82%E7%AB%AF" title="終端">終端</a>或者簡單的<a href="/wiki/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8" title="文字編輯器">文字編輯器</a>接受的格式。任何能讀取文字的程式都能讀取帶有.txt副檔名的檔案，因此，通常認為這種檔案是通用的、<a class="mw-redirect" href="/wiki/%E8%B7%A8%E5%B9%B3%E5%8F%B0" title="跨平台">跨平台</a>的。
</p>, <p>在英文文字檔案中，ASCII字元集是最為常見的格式，而且在許多場合，它也是預設的格式。對於帶重音符號的和其它的非ASCII字元，必須選擇一種字元編碼。在很多系統中，字元編碼是由電腦的區域設定決定的。常見的字元編碼包括支援許多歐洲語言的<a class="mw-redirect" href="/wiki/ISO_8859-1" title="ISO 8859-1">ISO 8859-1</a>。
</p>, <p>由於許多編碼只能表達有限的字元，通常它們只能用於表達幾種語言。<a href="/wiki/Unicode" title="Unicode">Unicode</a>制定了一種試圖能夠表達所有已知語言的標準，Unicode字元集非常大，它囊括了大多數已知的字元集。Unicode有多種字元編碼，其中最常見的是<a href="/wiki/UTF-8" title="UTF-8">UTF-8</a>，這種編碼能夠向下相容ASCII，相同內容的ASCII文字檔案和UTF-8文字檔案完全一致。
</p>, <p>微軟的MS-DOS和Windows採用了相同的文字檔案格式，它們都使用CR和LF兩個字元作為換行符，這兩個字元對應的ASCII碼分別為13和10。通常，最後一行文字並不以換行符（CR-LF標誌）結尾，包括記事本在內的很多文字編輯器也不在檔案的最後添加換行符。
</p>, <p>大多數Windows文字檔案使用ANSI、OEM或者Unicode編碼。Windows所指的ANSI編碼通常是1位元組的ISO-8859編碼，不過對於像中文、日文、朝鮮文這樣的環境，需要使用2位元組字元集。在過渡至Unicode前，Windows一直用ANSI作為系統預設的編碼。而OEM編碼，也是通常所說的MS-DOS頁碼，是<a href="/wiki/IBM" title="IBM">IBM</a>為早期IBM<a href="/wiki/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91" title="個人電腦">個人電腦</a>的文字模式顯示系統定義的。在全螢幕的MS-DOS程式中同時使用了圖形的和按行繪製的字元。新版本的Windows可以使用UTF-16LE和UTF-8之類的Unicode編碼。
</p>, <p>用文字編輯器開啟一個文字檔案後，用戶可以看到可讀的純文字內容。控制字元有時被編輯器當做文字指令，有時被當做像純文字那樣可編輯的<a href="/wiki/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6" title="跳脫字元">跳脫字元</a>。儘管文字檔案裡面有純文字資訊，但是通過特殊方法，檔案內的控制字元（尤其是檔案結束字元）可以讓純文字不可見。
</p>]