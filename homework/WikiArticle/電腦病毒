[<p><b>電腦病毒</b>（computer virus），或稱<b>電子計算機病毒</b>。是一種在人為或非人為的情況下產生的、在用戶不知情或未批准下，能自我<a href="/wiki/%E5%A4%8D%E5%88%B6" title="複製">複製</a>或運行的<a class="mw-redirect" href="/wiki/%E7%94%B5%E8%84%91%E7%A8%8B%E5%BA%8F" title="電腦程式">電腦程式</a>；電腦病毒往往會影響受感染電腦的正常運作，或是被控制而不自知，電腦正常運作僅盜竊資料、或者被利用做其他用途等用戶非自發啟動的行為。
</p>, <p>有不少病毒製作者<a href="/wiki/%E9%BB%91%E5%AE%A2" title="駭客">駭客</a>們被逮捕並予以起訴，判決的輕重各國都有所不同，如<a class="mw-redirect" href="/wiki/%E7%BD%97%E9%A9%AC%E5%B0%BC%E4%BA%9A" title="羅馬尼亞">羅馬尼亞</a><a class="new" href="/w/index.php?title=%E8%A5%BF%E6%AC%A7%E7%8F%AD%E5%B0%BC&amp;action=edit&amp;redlink=1" title="西歐班尼（頁面不存在）">西歐班尼</a>花費15分鐘寫的MSBlast.F變種大約只感染了1000台電腦，按他們國家的法律他就有可能最高會被判15年<a href="/wiki/%E6%9C%89%E6%9C%9F%E5%BE%92%E5%88%91" title="有期徒刑">有期徒刑</a>。1998年<a class="mw-redirect" href="/wiki/%E5%8F%B0%E6%B9%BE" title="台灣">台灣</a>病毒作者<a class="mw-redirect" href="/wiki/%E9%99%88%E7%9B%88%E8%B1%AA" title="陳盈豪">陳盈豪</a>寫的<a class="mw-redirect" href="/wiki/CIH" title="CIH">CIH</a>病毒據猜測造成全球600萬台電腦癱瘓，但他因為在被逮捕後無人起訴而免於法律制裁，在2001年有人以CIH受害者的身分起訴陳盈豪，才使他再次被逮捕，按照台灣當時的法律，他被判<a class="new" href="/w/index.php?title=%E6%8D%9F%E6%AF%81%E7%BD%AA&amp;action=edit&amp;redlink=1" title="損毀罪（頁面不存在）">損毀罪</a>面臨最高3年以下的有期徒刑。
</p>, <p><a href="/wiki/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86" title="中國大陸">中國大陸</a>的木馬程式「<a class="new" href="/w/index.php?title=%E8%AF%81%E5%88%B8%E5%A4%A7%E7%9B%97&amp;action=edit&amp;redlink=1" title="證券大盜（頁面不存在）">證券大盜</a>」作者<a href="/wiki/%E5%BC%B5%E5%8B%87_(%E9%BB%91%E5%AE%A2)" title="張勇 (駭客)">張勇</a>因使用其木馬程式截獲<a class="mw-redirect" href="/wiki/%E8%82%A1%E6%B0%91" title="股友">股友</a>帳戶密碼，盜賣<a href="/wiki/%E8%82%A1%E7%A5%A8" title="股票">股票</a>價值1141.9萬元<a href="/wiki/%E4%BA%BA%E6%B0%91%E5%B8%81" title="人民幣">人民幣</a>，非法獲利38.6萬元人民幣，最終的判決結果是<a href="/wiki/%E7%84%A1%E6%9C%9F%E5%BE%92%E5%88%91" title="無期徒刑">無期徒刑</a>。
</p>, <p>一公司的分析報告稱：目前全世界現有200萬有能力寫較成熟電腦病毒的<a href="/wiki/%E7%A8%8B%E5%BA%8F%E5%91%98" title="程式設計師">程式設計師</a>。<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup>
</p>, <p>第一份關於計算機病毒理論的學術工作（雖然"病毒"一詞在當時並未使用）於 1949年由<a href="/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC" title="約翰·馮·紐曼">約翰·馮·紐曼</a>完成。當時是以"Theory and Organization of Complicated Automata"為題的一場在<a class="mw-redirect" href="/wiki/%E4%BC%8A%E5%88%A9%E8%AF%BA%E4%BC%8A%E5%A4%A7%E5%AD%A6" title="伊利諾伊大學">伊利諾伊大學</a>的演講，稍後改以"Theory of self-reproducing automata"為題出版。馮·紐曼在他的論文中描述一個計算機程式如何複製其自身。
</p>, <p>1972年，Veith Risak根據馮·紐曼在自我複製上的工作為基礎發表"Self-reproducing automata with minimal information exchange"一文。該文描述一個以西門子4004/35計算機系統為目標，用組合語言編寫，具有完整功能的計算機病毒。
</p>, <p>1980年，Jürgen Kraus於<a class="mw-redirect" href="/wiki/%E5%A4%9A%E7%89%B9%E8%92%99%E5%BE%B7%E5%A4%A7%E5%AD%B8" title="多特蒙德大學">多特蒙德大學</a>撰寫他的學位論文"Self-reproduction of programs"。在他的論文中，他假設計算機程式可以表現出如同<a href="/wiki/%E7%97%85%E6%AF%92" title="病毒">病毒</a>般的行為。
</p>, <p>「病毒」一詞最早用來表達此意是在弗雷德·科恩（Fred Cohen）1984年的論文《電腦病毒實驗》。
</p>, <p>而病毒一詞廣為人知是得力於<a href="/wiki/%E7%A7%91%E5%B9%BB%E5%B0%8F%E8%AF%B4" title="科幻小說">科幻小說</a>。一部是1970年代中期大衛·傑洛德（David Gerrold）的《When H.A.R.L.I.E. was One》，描述了一個叫「病毒」的<a class="mw-disambig" href="/wiki/%E7%A8%8B%E5%BA%8F" title="程式">程式</a>和與之對戰的叫「<a href="/wiki/%E6%8A%97%E4%BD%93" title="抗體">抗體</a>」的程式；另一部是約翰·布魯勒爾（John Brunner）1975年的小說《震盪波騎士（ShakewaveRider）》，描述了一個叫做「磁帶蠕蟲」、在<a class="mw-disambig" href="/wiki/%E7%BD%91%E7%BB%9C" title="網路">網路</a>上刪除資料的程式。<sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup>
</p>, <p>1960年代初，<a href="/wiki/%E7%BE%8E%E5%9B%BD" title="美國">美國</a><a href="/wiki/%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A5%E5%AD%A6%E9%99%A2" title="麻省理工學院">麻省理工學院</a>的一些青年研究人員，在做完工作後，利用業餘時間玩一種他們自己創造的<a href="/wiki/%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F" title="電子遊戲">電腦遊戲</a>。做法是某個人編制一段小程式，然後輸入到電腦中執行，並銷毀對方的遊戲程式。而這也可能就是電腦病毒的雛形。<sup class="noprint Template-Fact"><a href="/wiki/Wikipedia:%E5%88%97%E6%98%8E%E6%9D%A5%E6%BA%90" title="Wikipedia:列明來源"><span style="white-space: nowrap;" title="來源請求。">[來源請求]</span></a></sup>
</p>, <p>為了能夠複製其自身，病毒必須能夠執行代碼並能夠對記憶體執行寫操作。基於這個原因，許多病毒都是將自己附著在合法的執行檔上。如果使用者企圖執行該執行檔，那麼病毒就有機會運行。病毒可以根據執行時所表現出來的行為分成兩類。非常駐型病毒會立即尋找其它宿主並伺機加以感染，之後再將控制權交給被感染的應用程式。常駐型病毒被執行時並不會尋找其它宿主。相反的，一個常駐型病毒會將自己載入記憶體並將控制權交給宿主。該病毒於背景中執行並伺機感染其它目標。
</p>, <p>非常駐型病毒可以被想成具有搜尋模組和複製模組的程式。搜尋模組負責尋找可被感染的檔案，一旦搜尋到該檔案，搜尋模組就會啟動複製模組進行感染。
</p>, <p>常駐型病毒包含複製模組，其角色類似於非常駐型病毒中的複製模組。複製模組在常駐型病毒中不會被搜尋模組調用。病毒在被執行時會將複製模組載入記憶體，並確保當作業系統執行特定動作時，該複製模組會被調用。例如，複製模組會在作業系統執行其它檔案時被調用。在這個例子中，所有可以被執行的檔案均會被感染。常駐型病毒有時會被區分成快速感染者和慢速感染者。快速感染者會試圖感染盡可能多的檔案。例如，一個快速感染者可以感染所有被存取到的檔案。這會對防毒軟體造成特別的問題。當執行全系統防護時，防毒軟體需要掃描所有可能會被感染的檔案。如果防毒軟體沒有察覺到記憶體中有快速感染者，快速感染者可以藉此搭便車，利用防毒軟體掃描檔案的同時進行感染。快速感染者依賴其快速感染的能力。但這同時會使得快速感染者容易被偵測到，這是因為其行為會使得系統效能降低，進而增加被防毒軟體偵測到的風險。相反的，慢速感染者被設計成偶而才對目標進行感染，如此一來就可避免被偵測到的機會。例如，有些慢速感染者只有在其它檔案被拷貝時才會進行感染。但是慢速感染者此種試圖避免被偵測到的作法似乎並不成功。
</p>, <p>由於<a href="/wiki/%E4%B8%96%E7%95%8C" title="世界">世界</a><a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a><a href="/wiki/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83" title="桌面環境">桌面環境</a>90%的市場都是使用<a href="/wiki/%E5%BE%AE%E8%BD%AF" title="微軟">微軟</a><a class="mw-redirect" href="/wiki/Windows" title="Windows">Windows</a>系列產品<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>，
所以病毒作者紛紛把病毒攻擊物件選為Windows。製作病毒者首先應該確定要攻擊的作業系統版本有何<a href="/wiki/%E6%BC%8F%E6%B4%9E" title="漏洞">漏洞</a>，這才是他所寫的病毒能夠利用的關鍵。Windows當時並沒有有效的安全與防禦功能，且使用者常以管理員權限執行未經安全檢查的軟體，這也為Windows下病毒的泛濫提供了溫床。<a href="/wiki/Linux" title="Linux">Linux</a>、<a class="mw-redirect" href="/wiki/Mac_OS" title="Mac OS">Mac OS</a>等<a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>，因使用的人群比較少，病毒一般不容易擴散。大多病毒發布作者的目的有多種，包括惡作劇、想搞破壞、報復及想出名與對研究病毒有特殊嗜好。
病毒主要通過<a class="mw-redirect" href="/wiki/%E7%B6%B2%E8%B7%AF" title="網路">網路</a>瀏覽以及<a href="/wiki/%E4%B8%8B%E8%BD%BD" title="下載">下載</a>，<a class="mw-redirect" href="/wiki/%E9%9B%BB%E5%AD%90%E9%83%B5%E4%BB%B6" title="電子郵件">電子郵件</a>以及抽取式<a class="mw-redirect" href="/wiki/%E7%A3%81%E7%A2%9F" title="磁碟">磁碟</a>等途徑迅速傳播。<sup class="reference" id="cite_ref-mc_4-0"><a href="#cite_note-mc-4">[4]</a></sup>
</p>, <p>市面上大多的<a class="new" href="/w/index.php?title=%E5%8F%AF%E7%A7%BB%E5%8A%A8%E9%A9%B1%E5%8A%A8%E5%99%A8&amp;action=edit&amp;redlink=1" title="抽取式驅動器（頁面不存在）">抽取式驅動器</a>都是屬於可讀寫模式，因此很容易寫入<a class="mw-redirect" href="/wiki/Autorun.inf" title="Autorun.inf">Autorun.inf</a>檔案以及許多惡意程式。受到感染的USB隨身碟病毒插入電腦裡後，病毒會躲藏在作業系統中的處理程序，偵測電腦上的一舉一動。當使用者將其他乾淨的USB插入受感染的電腦裡，病毒會複製到乾淨的USB裡，然後一傳十、十傳百。公用電腦的使用亦導致USB病毒快速散播。<sup class="reference" id="cite_ref-5"><a href="#cite_note-5">[5]</a></sup>
</p>, <p>病毒會藉由攔截防毒軟體對作業系統的呼叫來欺騙防毒軟體。當防毒軟體要求作業系統讀取檔案時，病毒可以攔截並處理此項要求，而非交給作業系統執行該要求。病毒可以返回一個未感染的檔案給防毒軟體，使得防毒軟體認為該檔案是乾淨未被感染的。如此一來，病毒可以將自己隱藏起來。現在的防毒軟體使用各種技術來反擊這種手段。要反擊病毒匿蹤，唯一完全可靠的方法是從一個已知是乾淨的媒介開始啟動。
</p>, <p>大部份防毒軟體透過所謂的病毒特徵碼來偵知一個檔案是否有被感染。特定病毒，或是同屬於一個家族的病毒會具有特定可辨識的特徵。如果防毒軟體偵測到檔案具有病毒特徵碼，它便會通知使用者該檔案已被感染。使用者可以刪除或是修復被感染的檔案。某些病毒會利用一些技巧使得透過病毒特徵碼進行偵測較為困難。這些病毒會在每一次感染時修改其自身的代碼。換言之，每個被感染的檔案包含的是病毒的變種。只能重灌或下載防毒軟體.
</p>, <p>胡搞更甚者是對病毒本身進行簡單的加密。這種情況下，病毒本身會包含數個解密模組和一份被加密的病毒拷貝。如果每一次的感染，病毒都用不同的密鑰加密，那病毒中唯一相同的部份就只有解密模組，常會附於檔案尾端。防毒軟體無法直接透過病毒特徵碼偵測病毒，但它仍可以偵知存在解密模組，這就可以間接偵測病毒。因為這部份是存放在宿主上面的對稱式密鑰，防毒軟體可以利用密鑰將病毒解密，但這並不必要。因為自修改代碼很少見，防毒軟體可以先將這類檔案標記成可疑。
</p>, <p>一個古老但簡潔的加密技術將病毒中每一個位元組和一個常數做<a href="/wiki/%E9%80%BB%E8%BE%91%E5%BC%82%E6%88%96" title="邏輯互斥或">邏輯互斥或</a>，欲將病毒解密只需簡單的邏輯互斥或。一個程式若可修改自身程式碼就十分可疑，因此許多病毒定義中，將加解密部份視為病毒特徵碼的一部份。
</p>, <p>多態是第一個對防毒軟體造成嚴重威脅的技術。就像一般被加密的病毒，一個多態病毒以一個加密的自身拷貝感染檔案，並由其解密模組加以解碼。但是其加密模組在每一次的感染中也會有所修改。因此，一個仔細設計的多態病毒在每一次感染中沒有一個部份是相同的。這使得使用病毒特徵碼進行偵測變得困難。防毒軟體必須在一模擬器上對該病毒加以解密進而偵知該病毒，或是利用加密病毒其統計模板上的分析。要使得多態代碼成為可能，病毒必須在其加密處有一個多態引擎（又稱突變引擎）。關於多態引擎的技術細節請參閱<a class="new" href="/w/index.php?title=Polymorphic_code&amp;action=edit&amp;redlink=1" title="Polymorphic code（頁面不存在）">Polymorphic code</a>。
</p>, <p>有些多態病毒會限制其突變的速率。例如，一個病毒可能隨著時間只有一小部份突變。或是病毒偵知宿主已被同一個病毒感染，它可以停止自己的突變。如此慢速的突變其優點在於，防毒專家很難得到該病毒具有代表性的樣本。因為在一輪感染中，誘餌檔案只會包含相同或是近似的病毒樣本。這會使得防毒軟體偵測結果變得不可靠，而有些病毒會躲過其偵測。
</p>, <p>為了避免被防毒軟體類比而被偵知，有些病毒在每一次的感染都完全將其自身改寫。利用此種技術的病毒被稱為可變形的。要達到可變形，一個變形引擎是必需的。一個變形病毒通常非常龐大且複雜。舉例來說，<span class="ilh-all" data-foreign-title="Simile (computer virus)" data-lang-code="en" data-lang-name="英語" data-orig-title="Simile"><span class="ilh-page"><a class="new" href="/w/index.php?title=Simile&amp;action=edit&amp;redlink=1" title="Simile（頁面不存在）">Simile</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Simile_(computer_virus)" title="en:Simile (computer virus)"><span dir="auto" lang="en">Simile (computer virus)</span></a></span>）</span></span>病毒包含14000行組合語言，其中90%都是變形引擎。
</p>, <p>以下表格所示是國際上對病毒命名慣用的字首釋義，DOS下的病毒一般無字首：
</p>, <p>中間部份指的是病毒的英文名，而字尾一般是變種代號。
</p>, <p>在<a href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6" title="電腦科學">電腦科學</a>裡，電腦病毒是類似<a href="/wiki/%E7%94%9F%E7%89%A9" title="生物">生物</a><a href="/wiki/%E7%97%85%E6%AF%92" title="病毒">病毒</a>一樣的程式，它會複製自己並傳播到其他<a href="/wiki/%E5%AE%BF%E4%B8%BB" title="宿主">宿主</a>，並對宿主造成損害。宿主也是程式，通常是作業系統，從而進一步傳染到其他程式、其他的電腦。電腦病毒在傳播期間一般會隱蔽自己，由特定的條件觸發，並開始產生破壞。
</p>, <p>電腦病毒具有的不良特徵有傳播性、隱蔽性、感染性、潛伏性、可激發性<sup class="reference" id="cite_ref-6"><a href="#cite_note-6">[6]</a></sup>、表現性或破壞性，通常表現兩種以上所述的特徵就可以認定該程式是病毒。
</p>, <p>電腦病毒的生命周期為開發期→傳染期→潛伏期→發作期→發現期→消化期→消亡期。<sup class="reference" id="cite_ref-mc_4-1"><a href="#cite_note-mc-4">[4]</a></sup><sup class="reference" id="cite_ref-7"><a href="#cite_note-7">[7]</a></sup>
</p>, <p>病毒一般會自動利用<a href="/wiki/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6" title="電子郵件">電子郵件</a>傳播，利用物件為某個漏洞。將病毒自動複製並群發給儲存的<a class="new" href="/w/index.php?title=%E9%80%9A%E8%AE%AF%E5%BD%95&amp;action=edit&amp;redlink=1" title="通訊錄（頁面不存在）">通訊錄</a>名單成員。郵件標題較為吸引人點擊，大多利用<a href="/wiki/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6" title="社會工程學">社會工程學</a>如「<a href="/wiki/ILOVEYOU%E8%A0%95%E8%9F%B2" title="ILOVEYOU蠕蟲">我愛妳</a>」這樣家人朋友之間親密的話語，以降低人的警戒性。如果病毒製作者再套用指令碼漏洞，將病毒直接嵌入郵件中，那麼使用者一點郵件標題開啟郵件就會中病毒。
</p>, <p>一般的病毒僅在數<a class="mw-disambig" href="/wiki/KB" title="KB">KB</a>左右，這樣除了傳播快速之外，隱蔽性也極強。部份病毒使用「無處理程序」技術或插入到某個系統必要的關鍵處理程序當中，所以在工作管理員中找不到它的單獨執行處理程序。而病毒自身一旦執行後，就會自己修改自己的檔名並隱藏在某個使用者不常去的系統資料夾中，這樣的資料夾通常有上千個系統檔案，如果憑手工尋找很難找到病毒。而病毒在執行前的偽裝技術也不得不值得我們關注，將病毒和一個吸引人的檔案綁紮合併成一個檔案，那麼執行正常吸引他的檔案時，病毒也在我們的作業系統中悄悄的執行了。
</p>, <p>某些病毒具有感染性，比如感染中毒使用者電腦上的可執行檔，如<a class="mw-redirect" href="/wiki/Exe" title="Exe">exe</a>、bat、scr、com格式，通過這種方法達到自我<a href="/wiki/%E5%A4%8D%E5%88%B6" title="複製">複製</a>，對自己生存保護的目的。通常也可以<a class="mw-disambig" href="/wiki/%E5%88%A9" title="利">利</a><a class="mw-redirect" href="/wiki/%E7%94%A8" title="用">用</a><a class="mw-disambig" href="/wiki/%E7%BD%91%E7%BB%9C" title="網路">網路</a><a href="/wiki/%E5%85%B1%E4%BA%AB" title="共享">共享</a>的漏洞，複製並傳播給鄰近的電腦使用者群，使鄰里通過<a href="/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8" title="路由器">路由器</a>上網的電腦或<a href="/wiki/%E7%BD%91%E5%90%A7" title="網咖">網咖</a>的電腦的多台電腦的程式全部受到感染。
</p>, <p>部份病毒有一定的「潛伏期」，在特定的日子，如某個<a href="/wiki/%E8%8A%82%E6%97%A5" title="節日">節日</a>或者星期幾按時爆發。如1999年破壞<a class="new" href="/w/index.php?title=%E2%84%96BIOS&amp;action=edit&amp;redlink=1" title="№BIOS（頁面不存在）">№BIOS</a>的<a href="/wiki/CIH%E7%97%85%E6%AF%92" title="CIH病毒">CIH病毒</a>就在每年的4月26日爆發。如同生物病毒一樣，這使電腦病毒可以在爆發之前，以最大幅度散播開去。
</p>, <p>根據病毒作者的「需求」，設定觸發病毒攻擊的「玄機」。如CIH病毒的製作者<a class="mw-redirect" href="/wiki/%E9%99%88%E7%9B%88%E8%B1%AA" title="陳盈豪">陳盈豪</a>曾打算設計的病毒，就是「精心」為<a class="mw-redirect" href="/wiki/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" title="簡體中文">簡體中文</a>Windows系統所設計的。病毒執行後會主動檢測中毒者作業系統的<a class="mw-redirect" href="/wiki/%E8%AF%AD%E8%A8%80" title="語言">語言</a>，如果發現作業系統語言為簡體中文，病毒就會自動對電腦發起攻擊，而語言不是簡體中文版本的Windows，那麼你即使執行了病毒，病毒也不會對你的電腦發起攻擊或者破壞。<sup class="reference" id="cite_ref-8"><a href="#cite_note-8">[8]</a></sup>
</p>, <p>病毒執行後，如果按照作者的設計，會有一定的表現特徵：如<a class="mw-redirect" href="/wiki/CPU" title="CPU">CPU</a>佔用率100%，在使用者無任何操作下讀寫<a href="/wiki/%E7%A1%AC%E7%9B%98" title="硬碟">硬碟</a>或其他磁碟資料，<a href="/wiki/%E8%93%9D%E5%B1%8F%E6%AD%BB%E6%9C%BA" title="藍白當機">藍白當機</a>，<a href="/wiki/%E9%BC%A0%E6%A0%87" title="滑鼠">滑鼠</a>右鍵無法使用等。但這樣明顯的表現特徵，反倒說明被感染病毒者發現自己已經感染病毒，並對清除病毒很有說明，隱蔽性就不存在了。
</p>, <p>病毒類型根據中國國家電腦病毒應急處理中心發表的報告統計，占近45%的病毒是木馬程式，蠕蟲占病毒總數的25%以上，占15%以上的是指令碼病毒，其餘的病毒類型分別是：檔案型病毒、破壞性程式和巨集病毒。
</p>, <p>免殺是指：對病毒的處理，使之躲過<a class="mw-redirect" href="/wiki/%E9%98%B2%E6%AF%92%E8%BB%9F%E9%AB%94" title="防毒軟體">防毒軟體</a>查殺的一種技術。通常病毒剛從病毒作者手中傳播出去前，本身就是免殺的，甚至可以說「病毒比防毒軟體還新，所以防毒軟體根本無法識別它是病毒」，但由於傳播後部份用戶中毒向防毒軟體公司舉報的原因，就會引起安全公司的注意並將之<a href="/wiki/%E7%89%B9%E5%BE%81%E7%A0%81" title="特徵碼">特徵碼</a>收錄到自己的<a href="/wiki/%E7%97%85%E6%AF%92%E5%BA%93" title="病毒媒體櫃">病毒庫</a>當中，病毒就會被防毒軟體所識別。
</p>, <p>病毒作者可以通過對病毒進行再次保護如使用<a class="mw-redirect" href="/wiki/%E6%B1%87%E7%BC%96" title="組譯">彙編</a>加<a class="new" href="/w/index.php?title=%E8%8A%B1%E6%8C%87%E4%BB%A4&amp;action=edit&amp;redlink=1" title="花指令（頁面不存在）">花指令</a>或者給檔案<a class="mw-redirect" href="/wiki/%E5%8A%A0%E5%AF%86%E6%8A%80%E6%9C%AF" title="加密技術">加殼</a>就可以輕易躲過防毒軟體的病毒特徵碼庫而免於被防毒軟體查殺。
</p>, <p>美國的<a class="mw-redirect" href="/wiki/Norton_Antivirus" title="Norton Antivirus">Norton Antivirus</a>、<a class="mw-redirect" href="/wiki/McAfee" title="McAfee">McAfee</a>、<a href="/wiki/PC-cillin" title="PC-cillin">PC-cillin</a>，羅馬尼亞的<a href="/wiki/Bitdefender" title="Bitdefender">Bitdefender</a>，俄羅斯的<a class="mw-redirect" href="/wiki/Kaspersky_Anti-Virus" title="Kaspersky Anti-Virus">Kaspersky Anti-Virus</a>，斯洛伐克的<a class="mw-redirect" href="/wiki/NOD32" title="NOD32">NOD32</a>等產品在國際上口碑較好，但殺毒、查殼能力都有限，目前病毒庫總數量也都僅在數十萬個左右。
</p>, <p>自我更新性是近年來病毒的又一新特徵。病毒可以藉助於網路進行變種更新，得到最新的免殺版本的病毒並繼續在用戶感染的計算機上運行，比如<a href="/wiki/%E7%86%8A%E7%8C%AB%E7%83%A7%E9%A6%99" title="熊貓燒香">熊貓燒香</a>病毒的作者就建立了「病毒升級<a class="mw-redirect" href="/wiki/%E4%BC%BA%E6%9C%8D%E5%99%A8" title="伺服器">伺服器</a>」，在最勤時一天要對病毒升級8次，比有些殺毒軟體病毒庫的更新速度還快，因為開發者對代碼編輯十分勤奮，所以就造成了殺毒軟體無法識別病毒。
</p>, <p>除了自身免殺自我更新之外，很多病毒還具有了對抗它的「天敵」殺毒軟體和防火牆產品反病毒軟體的全新特徵，只要病毒運行後，病毒會自動破壞中毒者計算機上安裝的殺毒軟體和<a class="mw-redirect" href="/wiki/%E9%98%B2%E7%81%AB%E7%89%86_(%E7%B6%B2%E7%B5%A1)" title="防火牆 (網路)">防火牆</a>產品，如病毒自身驅動級Rootkit保護強制檢測並結束殺毒軟體進程，可以過主流殺毒軟體「主動防禦」和穿透軟、<a href="/wiki/%E7%A1%AC%E4%BB%B6" title="硬體">硬體</a>還原的<a href="/wiki/%E6%9C%BA%E5%99%A8%E7%8B%97_(%E7%94%B5%E8%84%91%E7%97%85%E6%AF%92)" title="機器狗 (電腦病毒)">機器狗</a><sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[9]</a></sup>，自動修改系統時間導致一些殺毒軟體廠商的正版認證作廢以致殺毒軟體作廢，從而病毒生存能力更加強大。
</p>, <p>免殺技術的氾濫使得同一種原型病毒透過外掛程式，理論上可以衍生出近乎無窮無盡的變種，給依賴於特徵碼技術檢測的殺毒軟體帶來很大困擾。近年來，國際反病毒行業普遍開展了各種前瞻性技術研究，試圖扭轉過分依賴特徵碼所產生的不利局面。目前比較有代表性產品的是基於虛擬機技術的啟發式掃瞄軟體，代表廠商NOD32，Dr.Web，和基於行為分析技術的主動防禦軟體，代表廠商中國的<a href="/wiki/%E5%BE%AE%E7%82%B9%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1%E8%BD%AF%E4%BB%B6" title="微點主動防禦軟體">微點主動防禦軟體</a>等。
</p>]