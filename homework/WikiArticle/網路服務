[<p><b>Web服務</b>是一種<a class="mw-redirect" href="/wiki/%E6%9C%8D%E5%8B%99%E5%B0%8E%E5%90%91%E6%9E%B6%E6%A7%8B" title="服務導向架構">服務導向架構</a>的技術，透過標準的<a href="/wiki/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" title="網絡傳輸協議">Web協議</a>提供服務，目的是保證不同平台的應用服務可以互操作。
</p>, <p>根據<a class="mw-redirect" href="/wiki/W3C" title="W3C">W3C</a>的定義，<b>Web服務</b>（Web service）應當是一個<a href="/wiki/%E8%BD%AF%E4%BB%B6" title="軟體">軟體</a>系統，用以支持<a class="mw-disambig" href="/wiki/%E7%BD%91%E7%BB%9C" title="網絡">網絡</a>間不同機器的互動操作。網絡服務通常是許多<a href="/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3" title="應用程式接口">應用程式接口</a>（<a class="mw-redirect" href="/wiki/API" title="API">API</a>）所組成的，它們透過網絡，例如國際網際網路（<a class="mw-redirect" href="/wiki/Internet" title="Internet">Internet</a>）的遠程<a href="/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8" title="伺服機">伺服機</a>端，執行客戶所提交服務的請求。
</p>, <p>儘管W3C的定義涵蓋諸多相異且無法介分的系統，不過通常我們指有關於<a href="/wiki/%E4%B8%BB%E5%BE%9E%E5%BC%8F%E6%9E%B6%E6%A7%8B" title="主從式架構">主從式架構</a>（Client-server）之間根據<a class="mw-redirect" href="/wiki/SOAP" title="SOAP">SOAP</a>協議進行傳遞<a href="/wiki/XML" title="XML">XML</a>格式消息。無論定義還是實現，WEB服務過程中會由伺服機提供一個機器可讀的描述（通常基於<a href="/wiki/WSDL" title="WSDL">WSDL</a>）以辨識伺服機所提供的WEB服務。另外，雖然WSDL不是SOAP服務端點的必要條件，但目前基於<a href="/wiki/Java" title="Java">Java</a>的主流WEB服務開發框架往往需要WSDL實現客戶端的原始碼生成。一些工業<a href="/wiki/%E6%A0%87%E5%87%86%E5%8C%96" title="標準化">標準化</a>組織，比如<a class="new" href="/w/index.php?title=WS-I&amp;action=edit&amp;redlink=1" title="WS-I（頁面不存在）">WS-I</a>，就在WEB服務定義中強制包含SOAP和WSDL。
</p>, <p>考慮到並沒某個獨立文檔包含一切相關內容，可採用模塊化的方式給出對WEB服務的描述，但不能給出一個「絕對全面和準確」的定義。受外部環境和實現技術影響，各方給出的核心定義可能稍有出入，但通常包括：
</p>, <p>這些標準由這些組織制訂：W3C負責XML、SOAP及WSDL；<a href="/wiki/%E7%B5%90%E6%A7%8B%E5%8C%96%E8%B3%87%E8%A8%8A%E6%A8%99%E6%BA%96%E4%BF%83%E9%80%B2%E7%B5%84%E7%B9%94" title="結構化資訊標準促進組織">OASIS</a>負責UDDI。
</p>, <p>為提高WEB服務間的互操作能力，WS-I還特別發布了WEB服務協議集（Profile）。協議集包含了一系列特定版本的核心定義（諸如SOAP和WSDL），以及對其使用上的限制與約束。WS-I還發布了用於部署協議集兼容WEB服務的測試工具及相關用例。
</p>, <p>為擴展WEB服務能力，一些新的標準已經或正在被開發。這些標準通常被冠以WS字頭（Web Service的簡稱），以下是一個WS系列追加標準的不完全列表：
</p>, <p>一直以來，W3C負責制定了不少WS追加定義，但近來此舉開始受到懷疑。一些人呼籲W3C作為網絡和語義網構建者應當把精力放在核心網絡本身，而不是為WEB服務改換版本。特別是2007年2月的企業級WEB服務論壇上，對W3C不再充當WEB服務定義者的訴求開始表面化。
此外，OASIS對WEB服務擴展實施了許多標準化工作。包括WEB服務資源框架以及<a class="new" href="/w/index.php?title=WSDM&amp;action=edit&amp;redlink=1" title="WSDM（頁面不存在）">WSDM</a>。
</p>, <p>WEB服務實際上是一組工具，並有多種不同的方法呼叫之。三種最普遍的手段是：<a class="mw-redirect" href="/wiki/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8" title="遠端程序呼叫">遠端程序呼叫</a>（RPC），<a class="mw-redirect" href="/wiki/%E6%9C%8D%E5%8B%99%E5%B0%8E%E5%90%91%E6%9E%B6%E6%A7%8B" title="服務導向架構">服務導向架構</a>（SOA）以及表述性狀態轉移（<a class="mw-redirect" href="/wiki/REST" title="REST">REST</a>）。
</p>, <p>WEB服務提供一個分布式<a href="/wiki/%E5%87%BD%E6%95%B0" title="函數">函數</a>或<a class="mw-disambig" href="/wiki/%E6%96%B9%E6%B3%95" title="方法">方法</a>接口供用戶呼叫，這是一種比較傳統的方式。通常，在WSDL中對RPC接口進行定義（類似於早期的XML-RPC）。
</p>, <p>儘管最初的WEB服務廣泛採用RPC方式部署，但針對其過於緊密之耦合性的批評聲也隨之不斷。這是因為RPC式WEB服務實質上是利用一個簡單的映射，以把用戶請求直接轉化成為一個特定語言編寫的函數或方法。如今，多數服務提供商認定此種方式在未來將難有作為，在他們的推動下，WS-I基本協議集（WS-I Basic Profile）已不再支持遠端程序呼叫。
</p>, <p>現在，業界比較關注的是遵從服務導向架構（Service-oriented architecture，SOA）概念來構築WEB服務。在服務導向架構中，通訊由消息驅動，而不再是某個動作（方法呼叫）。這種WEB服務也被稱作面向消息的服務。
</p>, <p>SOA式WEB服務得到了大部分主要軟體供應商以及業界專家的支持和肯定。作為與RPC方式的最大差別，SOA方式更加關注如何去連接服務而不是去特定某個實現的細節。WSDL定義了聯絡服務的必要內容。
</p>, <p>表述性狀態轉移式（Representational state transfer，REST）WEB服務類似於HTTP或其他類似協議，它們把接口限定在一組廣為人知的標準動作中（比如HTTP的GET、PUT、DELETE）以供呼叫。此類WEB服務關注與那些穩定的資源的互動，而不是消息或動作。
</p>, <p>此種服務可以透過WSDL來描述SOAP消息內容，透過HTTP限定動作接口；或者完全在SOAP中對動作進行抽象。
</p>, <p>一些人抱怨，WEB服務（具象化狀態轉移式除外）過於複雜，認為它太過於偏重那些大型軟體開發商，而不利於<a class="mw-redirect" href="/wiki/%E5%BC%80%E6%BA%90" title="開源">開源</a>項目。但是至今不少開發工具已經具備自動化產生具象物件，已經減少web服務的呼叫難度。例如Microsoft visual studio、eclipse 等等IDE工具。使用者只需要專注於呼叫與實行。
</p>, <p><br/>
WEB服務的性能也時常是人們關注的一個問題。由於使用XML作為消息格式，並以SOAP封裝，由HTTP傳輸，WEB服務始終處於較高的開銷狀態。不過目前一些新興技術正在試圖解決此一問題，諸如新的XML處理模型致力於解決XML這一部分的性能。
</p>, <p>無論是在WEB服務出現以前，還是現在，一直不斷有各種同類技術問世。比如，<a class="mw-redirect" href="/wiki/Java_RMI" title="Java RMI">RMI</a>作為這樣一種中間件系統就得到了廣泛部署。<a href="/wiki/CORBA" title="CORBA">CORBA</a>和<a class="mw-redirect" href="/wiki/DCOM" title="DCOM">DCOM</a>則更加雄心壯志，兩者都嘗試將作用域波及到分布式對象，這一點也為WEB服務所模仿。
</p>, <p>這些類似方式往往藉助於XML-RPC和HTTP本身，而不依靠SOAP封裝參數。
</p>]