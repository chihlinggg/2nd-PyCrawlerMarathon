[<p><b>超級電腦</b>（英語：<span lang="en">Supercomputer</span>），指能夠執行一般<a href="/wiki/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91" title="個人電腦">個人電腦</a>無法處理的高速運算的電腦，規格與效能比個人電腦強大許多。現有的超級電腦運算速度大都可以達到每秒一<a href="/wiki/%E5%85%86" title="兆">兆</a>（萬億，非百萬）次以上。「超級計算」（<span lang="en">supercomputing</span>）這名詞第一次出現，是在1929年《<a class="new" href="/w/index.php?title=%E7%BA%BD%E7%BA%A6%E4%B8%96%E7%95%8C%E6%8A%A5&amp;action=edit&amp;redlink=1" title="紐約世界報（頁面不存在）">紐約世界報</a>》關於<a href="/wiki/IBM" title="IBM">IBM</a>為<a href="/wiki/%E5%93%A5%E4%BC%A6%E6%AF%94%E4%BA%9A%E5%A4%A7%E5%AD%A6" title="哥倫比亞大學">哥倫比亞大學</a>建造大型<a class="new" href="/w/index.php?title=%E5%A0%B1%E8%A1%A8%E6%9C%BA&amp;action=edit&amp;redlink=1" title="報表機（頁面不存在）">報表機</a>（<span lang="en">tabulator</span>）的報導。<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup>
</p>, <p>1960年代，超級電腦由<a class="new" href="/w/index.php?title=%E5%BE%90%E9%BA%A5%E5%8F%AF&amp;action=edit&amp;redlink=1" title="徐麥可（頁面不存在）">徐麥可</a>（Michael Tsui）在Control Data Corporation裡設計出來並領先市場直到1970年代克雷創立自己的公司──<a class="mw-redirect" href="/wiki/%E5%85%8B%E9%9B%B7%E7%A0%94%E7%A9%B6" title="克雷研究">克雷研究</a>。憑著他的新設計，他控制了整個超級電腦市場，並占據顛峰位置長達五年（1985年－1990年）。到了1980年代，正值小型電腦市場萌芽階段，大量小型對手加入競爭。在1990年代中期，很多對手受不了市場的衝擊而消聲匿跡。今天，超級電腦成了一種由像<a href="/wiki/IBM" title="IBM">IBM</a>及<a href="/wiki/%E6%83%A0%E6%99%AE" title="惠普">惠普</a>等大型電腦公司所特意設計的電腦。雖然這些公司通過不斷併購其他公司而增強了自己的經驗，克雷研究依然是超級電腦領域的巨頭之一。
</p>, <p>「超級電腦」一詞並無明確定義，其含義隨電腦業界的發展而發生變化。早期的控制資料公司機器可達十倍速於競爭對手，但仍然是比較原始的<a href="/wiki/%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8" title="純量處理器">純量處理器</a>。到了1970年代，大部分超級電腦就已經是<a href="/wiki/%E5%90%91%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8" title="向量處理器">向量處理器</a>了，很多是新進者自行開發的廉價處理器來攻占市場。1980年代初期，業界開始轉向大規模<a href="/wiki/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97" title="平行計算">平行計算</a>系統，這時的超級電腦由成千上萬的普通處理器所組成。1980年代中葉，將適量的向量處理器（一般由8個到16個不等）聯合起來進行平行計算成為通用的方法。1990年代以後到21世紀初，超級電腦則主要<a href="/wiki/%E4%BA%92%E8%81%AF" title="互聯">互聯</a>基於<a href="/wiki/%E7%B2%BE%E7%AE%80%E6%8C%87%E4%BB%A4%E9%9B%86" title="精簡指令集">精簡指令集</a>的<a href="/wiki/%E5%BC%A0%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8" title="張量處理器">張量處理器</a>（譬如<a href="/wiki/PowerPC" title="PowerPC">PowerPC</a>、<a href="/wiki/PA-RISC" title="PA-RISC">PA-RISC</a>或<a href="/wiki/DEC_Alpha" title="DEC Alpha">DEC Alpha</a>）來進行平行計算。
</p>, <p>超級電腦常用於需要大量運算的工作，譬如<a class="mw-redirect" href="/wiki/%E6%95%B0%E5%80%BC%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5" title="數值天氣預報">數值天氣預報</a><sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup>、<a class="mw-redirect" href="/wiki/%E8%BF%90%E7%AE%97%E5%8C%96%E5%AD%A6" title="運算化學">運算化學</a>、<a class="mw-redirect" href="/wiki/%E5%88%86%E5%AD%90%E6%A8%A1%E5%9E%8B" title="分子模型">分子模型</a>、<a class="mw-redirect" href="/wiki/%E5%A4%A9%E4%BD%93%E7%89%A9%E7%90%86" title="天體物理">天體物理</a>類比<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>、汽車設計類比<sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup>、<a href="/wiki/%E5%AF%86%E7%A0%81%E5%88%86%E6%9E%90" title="密碼分析">密碼分析</a>等。
</p>, <p>超級電腦的創新設計在於把複雜的工作細分為可以同時處理的工作並分配於不同的處理器。他們在進行特定的運算方面表現突出，但在處理一般工作時卻不那麼優秀。他們的資料結構是經過精心設計來確保資料及指令及時送達——遞移速度的細微差別可以導致運算能力的巨大差別。其輸入／輸出系統也有特殊設計來提供高<a href="/wiki/%E5%B8%A6%E5%AE%BD" title="頻寬">頻寬</a>，但是這裡的資料傳輸延遲卻並不重要——超級電腦並非資料交換機。
</p>, <p>根據<a href="/wiki/%E9%98%BF%E5%A7%86%E8%BE%BE%E5%B0%94%E5%AE%9A%E5%BE%8B" title="阿姆達爾定律">阿姆達爾定律</a>，超級電腦的設計都集中在減少軟體上的<a href="/wiki/%E5%BA%8F%E5%88%97%E5%8C%96" title="序列化">序列化</a>、用硬體在瓶頸上加速。
</p>, <p>因超級電腦而開發的技術：
</p>, <p>向量處理因超級電腦而建立並用於高效能運算。向量處理技術後來被用於普通電腦內的訊號處理架構及<a href="/wiki/%E5%8D%95%E6%8C%87%E4%BB%A4%E6%B5%81%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%B5%81" title="單指令流多資料流">單指令流多資料流</a>，例如：電視遊樂器及<a class="mw-redirect" href="/wiki/%E9%80%9A%E7%94%A8%E5%9C%96%E5%BD%A2%E8%99%95%E7%90%86%E5%99%A8" title="通用圖形處理器">通用圖形處理器</a>等。<sup class="reference" id="cite_ref-6"><a href="#cite_note-6">[5]</a></sup>
</p>, <p>一般的超級電腦都使用<a class="mw-redirect" href="/wiki/Unix" title="Unix">Unix</a>或<a class="mw-redirect" href="/wiki/%E7%B1%BBUnix" title="類Unix">類Unix</a><a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>，但在講求絕對高效能的操作環境時，超級電腦開發人員會動用特別的輕量級核心（Light Weight Kernel－LWK），減少<a class="mw-redirect" href="/wiki/%E4%B8%AD%E6%96%AD" title="中斷">中斷</a>請求、<a href="/wiki/%E8%A1%8C%E7%A8%8B%E9%96%93%E9%80%9A%E8%A8%8A" title="行程間通訊">行程間通訊</a>等開銷以提高效能。<sup class="reference" id="cite_ref-7"><a href="#cite_note-7">[6]</a></sup>
</p>, <p>輕量級核心包括Cray XT3的Catamount<sup class="reference" id="cite_ref-8"><a href="#cite_note-8">[7]</a></sup>，Cray XT4的CNL (Compute Node Linux)<sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[8]</a></sup>， 以及IBM<a class="mw-redirect" href="/wiki/%E8%97%8D%E8%89%B2%E5%9F%BA%E5%9B%A0" title="藍色基因">藍色基因</a>的CNK（Compute Node Kernel）。<sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[9]</a></sup>
</p>, <p><a href="/wiki/%E8%A8%8A%E6%81%AF%E5%82%B3%E9%81%9E%E4%BB%8B%E9%9D%A2" title="訊息遞移介面">訊息遞移介面</a>及較舊的並列虛擬機器（PVM）常用於非共享記憶體系統（Distributed Memory System），而<a href="/wiki/OpenMP" title="OpenMP">OpenMP</a>常用於<a href="/wiki/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98" title="共享記憶體">共享記憶體</a>並行系統。<sup class="reference" id="cite_ref-11"><a href="#cite_note-11">[10]</a></sup><sup class="reference" id="cite_ref-12"><a href="#cite_note-12">[11]</a></sup>
</p>, <p>傳統上<a href="/wiki/Fortran" title="Fortran">Fortran</a>的編譯器可以產生比<a href="/wiki/C%E8%AF%AD%E8%A8%80" title="C語言">C</a>或<a href="/wiki/C%2B%2B" title="C++">C++</a>更高效能目的碼，所以Fortran仍然被使用作科學程式設計。
</p>, <p>超級電腦需要編譯器最佳化技術以產生優佳的目的碼，現今的最佳化編譯器都對向量化（Vectorization）、<a class="mw-redirect" href="/wiki/%E7%A8%8B%E5%BC%8F%E8%BF%B4%E5%9C%88" title="程式迴圈">程式迴圈</a>、<a href="/wiki/%E8%A8%98%E6%86%B6%E9%AB%94%E9%9A%8E%E5%B1%A4" title="記憶體階層">記憶體階層</a>及資料局部性進行最佳化。<sup class="reference" id="cite_ref-13"><a href="#cite_note-13">[12]</a></sup><sup class="reference" id="cite_ref-14"><a href="#cite_note-14">[13]</a></sup><sup class="reference" id="cite_ref-15"><a href="#cite_note-15">[14]</a></sup>
</p>, <p>此外，最佳化編譯器都以高層次的中間表示（Intermediate Representation）最佳化程式 － 包括<a href="/wiki/Open64" title="Open64">Open64</a>編譯器的WHIRL、<sup class="reference" id="cite_ref-16"><a href="#cite_note-16">[15]</a></sup>IBM XL編譯器的Wcode。<sup class="reference" id="cite_ref-17"><a href="#cite_note-17">[16]</a></sup>
</p>, <p>超級電腦主要執行科學運算等擁有大量<a href="/wiki/%E5%90%91%E9%87%8F" title="向量">向量</a>及<a class="mw-redirect" href="/wiki/%E7%9F%A9%E9%99%A3" title="矩陣">矩陣</a>浮點計算的程式，因此最佳化常用的數學函式會提高運算效能。<a href="/wiki/BLAS" title="BLAS">BLAS</a>函式庫使向量及矩陣浮點計算效能大大提高，<sup class="reference" id="cite_ref-18"><a href="#cite_note-18">[17]</a></sup><sup class="reference" id="cite_ref-19"><a href="#cite_note-19">[18]</a></sup>而優佳化數學函式庫則提高<a class="mw-redirect" href="/wiki/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B8" title="三角函數">三角函數</a>及<a href="/wiki/%E5%B9%B3%E6%96%B9%E6%A0%B9" title="平方根">平方根</a>等數學運算。<sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[19]</a></sup>
</p>, <p>平行檔案系統屬於分散式檔案系統的一類，支援多客戶端節點、多檔案系統伺服器，以及支援平行I/O（如MPI-IO、HDF5）；現今流行的平行檔案系統包括Lustre和PVFS。<sup class="reference" id="cite_ref-21"><a href="#cite_note-21">[20]</a></sup>
</p>, <p>超級電腦節點之間的通信一般都需要使用高效能的網路介面，現今大多TOP500的超級電腦使用<a class="mw-redirect" href="/wiki/%E4%B9%99%E5%A4%AA%E7%B6%B2%E8%B7%AF" title="乙太網路">乙太網路</a>（44.8%）及<a href="/wiki/InfiniBand" title="InfiniBand">InfiniBand</a>（41.8%）。<sup class="reference" id="cite_ref-22"><a href="#cite_note-22">[21]</a></sup>
</p>, <p>傳統上InfiniBand比乙太網路有更高的頻寬，同時因<a class="mw-redirect" href="/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1" title="作業系統">作業系統</a>呼叫省略（Operating System Bypass）而提供更低的延遲時間（latency）；然而2011年<a class="mw-redirect" href="/wiki/%E6%80%9D%E7%A7%91%E7%B3%BB%E7%B5%B1" title="思科系統">思科系統</a>開發<a class="new" href="/w/index.php?title=VFIO&amp;action=edit&amp;redlink=1" title="VFIO（頁面不存在）">VFIO</a>技術於超級電腦和叢集應用，使一般的乙太網路介面也能提供低延遲時間，從而提升乙太網路在超級電腦的應用層面。<sup class="reference" id="cite_ref-23"><a href="#cite_note-23">[22]</a></sup>
</p>, <p>大致上可以分為三種：
</p>, <p>根據<a href="/wiki/%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B" title="摩爾定律">摩爾定律</a>及經濟規模，一個現代的桌面電腦比15年前的超級電腦有更高效能，皆因某些超級電腦的設計已經放在桌面電腦內。再者，簡單晶片的開發及生產成本位元意設計給超級電腦的更便宜。
</p>, <p>超級電腦所處理的問題都適合併行化，當中減少處理單元之間的資料傳送量。因此，傳統的超級電腦可以被電腦叢集所代替。
</p>, <p><a href="/wiki/TOP500" title="TOP500">TOP500</a>列表排名世界上最快的500台超級電腦<sup class="reference" id="cite_ref-24"><a href="#cite_note-24">[23]</a></sup></p>, <p>GREEN500 列表排名世界上最節能的超級電腦<sup class="reference" id="cite_ref-25"><a href="#cite_note-25">[24]</a></sup>
</p>, <p>超級電腦速度以每秒<a class="mw-redirect" href="/wiki/%E6%B5%AE%E9%BB%9E%E9%81%8B%E7%AE%97" title="浮點運算">浮點運算</a>次數"<a class="mw-redirect" href="/wiki/FLOPS" title="FLOPS">FLOPS</a>"（floating-point operations per second）來作量度單位，常見的表示電腦中的峰值或速度用的單位英漢對照如下：
</p>, <p>此外，由於浮點<a class="mw-redirect" href="/wiki/%E7%A7%AF%E5%92%8C%E7%86%94%E5%8A%A0%E8%BF%90%E7%AE%97" title="積和熔加運算">積和熔加運算</a>或<a class="mw-redirect" href="/wiki/%E4%B9%98%E7%A7%AF%E7%B4%AF%E5%8A%A0" title="乘積累加">乘積累加</a>是兩次的浮點運算（每條FMA<a href="/wiki/%E6%8C%87%E4%BB%A4" title="指令">指令</a>包括加/減及<a href="/wiki/%E4%B9%98%E6%B3%95" title="乘法">乘</a>），因此當處理器支援FMA指令時，峰值是兩倍每秒所能執行FMA指令的數目。<sup class="reference" id="cite_ref-26"><a href="#cite_note-26">[25]</a></sup>
</p>, <p>截至2018年4月9號，世界上運算速度最快的超級電腦是<a class="mw-redirect" href="/wiki/%E7%BE%8E%E5%9C%8B" title="美國">美國</a>製的<a class="mw-redirect" href="/wiki/Summit_(%E8%B6%85%E7%B4%9A%E9%9B%BB%E8%85%A6)" title="Summit (超級電腦)">Summit</a>（譯為高峰或頂點超級電腦），其合作夥伴是<a href="/wiki/IBM" title="IBM">IBM</a>和<a href="/wiki/%E8%8B%B1%E4%BC%9F%E8%BE%BE" title="輝達">輝達</a>（nVIDIA），Summit由IBM在輝達幫助下為ORNL開發，耗資約2億美元，占地面積相當於兩個網球場。它的峰值運算效能為200PFlops，即每秒執行2京次浮點運算，將是其「同門師兄」、此前美國排名第一位超級電腦——同屬ORNL旗下Titan的八倍。<sup class="reference" id="cite_ref-27"><a href="#cite_note-27">[26]</a></sup>
</p>, <p>截止到2017年11月14號，世界上最節能的超級電腦是日本國立理化學研究所的菖蒲超級電腦B型。<sup class="reference" id="cite_ref-28"><a href="#cite_note-28">[27]</a></sup>
</p>, <p>專用超級電腦都是針對單一問題而開發的電腦。這些電腦都使用專門編程的FPGA晶片及超大型密集晶片，縱然犧牲普遍性也要提高成本效能比率。它們被用於天文物理學及密碼破解之上。
</p>, <p>例子：
</p>]