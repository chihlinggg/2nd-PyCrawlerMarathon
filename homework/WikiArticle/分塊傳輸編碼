[<p><b>分塊傳輸編碼</b>（<b>Chunked transfer encoding</b>）是超文本傳輸協議（HTTP）中的一種數據傳輸機制，允許<a class="mw-redirect" href="/wiki/HTTP" title="HTTP">HTTP</a>由<a href="/wiki/%E7%B6%B2%E9%A0%81%E4%BC%BA%E6%9C%8D%E5%99%A8" title="網頁伺服器">網頁伺服器</a>發送給<a href="/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF" title="客戶端">客戶端</a><a class="mw-redirect" href="/wiki/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6" title="應用軟體">應用</a>（ 通常是<a href="/wiki/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8" title="網頁瀏覽器">網頁瀏覽器</a>）的數據可以分成多個部分。分塊傳輸編碼只在HTTP協議1.1版本（HTTP/1.1）中提供。
</p>, <p>通常，HTTP應答消息中發送的數據是整個發送的，Content-Length消息頭欄位表示數據的長度。數據的長度很重要，因為客戶端需要知道哪裡是應答消息的結束，以及後續應答消息的開始。然而，使用分塊傳輸編碼，數據分解成一系列數據塊，並以一個或多個塊發送，這樣伺服器可以發送數據而不需要預先知道發送內容的總大小。通常數據塊的大小是一致的，但也不總是這種情況。
</p>, <p>HTTP 1.1引入分塊傳輸編碼提供了以下幾點好處：
</p>, <p>如果一個HTTP消息（包括客戶端發送的請求消息或伺服器返回的應答消息）的<tt>Transfer-Encoding</tt>消息頭的值為<tt>chunked</tt>，那麼，消息體由數量未定的塊組成，並以最後一個大小為0的塊為結束。
</p>, <p>每一個非空的塊都以該塊包含數據的<a href="/wiki/%E5%AD%97%E8%8A%82" title="字節">字節</a>數（字節數以<a href="/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六進位">十六進位</a>表示）開始，跟隨一個CRLF （<a href="/wiki/%E5%9B%9E%E8%BB%8A%E9%8D%B5" title="回車鍵">回車</a>及<a href="/wiki/%E6%8F%9B%E8%A1%8C" title="換行">換行</a>），然後是數據本身，最後塊CRLF結束。在一些實現中，塊大小和CRLF之間填充有白空格（0x20）。
</p>, <p>最後一塊是單行，由塊大小（0），一些可選的填充白空格，以及CRLF。最後一塊不再包含任何數據，但是可以發送可選的尾部，包括消息頭欄位。
</p>, <p>消息最後以CRLF結尾。
</p>, <p>前兩個塊的數據中包含有顯式的<tt>\r\n</tt>字符。
</p>, <p>編碼的數據需要以0長度的塊（ <tt>"0\r\n\r\n"</tt>.）結束。
</p>]