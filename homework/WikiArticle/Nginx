[<p><b>Nginx</b>（發音同「<span lang="en">engine X</span>」）是非同步框架的<a href="/wiki/%E7%B6%B2%E9%A0%81%E4%BC%BA%E6%9C%8D%E5%99%A8" title="網頁伺服器">網頁伺服器</a>，也可以用作<a href="/wiki/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" title="反向代理">反向代理</a>、<a href="/wiki/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1" title="負載均衡">負載平衡器</a>和<a class="mw-redirect" href="/wiki/HTTP%E7%BC%93%E5%AD%98" title="HTTP快取">HTTP快取</a>。該軟體由<a href="/wiki/%E4%BC%8A%E6%88%88%E7%88%BE%C2%B7%E8%B3%BD%E7%B4%A2%E8%80%B6%E5%A4%AB" title="伊戈爾·賽索耶夫">伊戈爾·賽索耶夫</a>建立並於2004年首次公開發布<sup class="reference" id="cite_ref-Mobily_6-0"><a href="#cite_note-Mobily-6">[6]</a></sup>。2011年成立同名公司以提供支援<sup class="reference" id="cite_ref-D_7-0"><a href="#cite_note-D-7">[7]</a></sup>。2019年3月11日，Nginx公司被<span class="ilh-all" data-foreign-title="F5 Networks" data-lang-code="en" data-lang-name="英語" data-orig-title="F5 Networks"><span class="ilh-page"><a class="new" href="/w/index.php?title=F5_Networks&amp;action=edit&amp;redlink=1" title="F5 Networks（頁面不存在）">F5 Networks</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/F5_Networks" title="en:F5 Networks"><span dir="auto" lang="en">F5 Networks</span></a></span>）</span></span>以6.7億美元收購<sup class="reference" id="cite_ref-8"><a href="#cite_note-8">[8]</a></sup>。
</p>, <p>Nginx是免費的<a href="/wiki/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6" title="開源軟體">開源軟體</a>，根據類<a href="/wiki/BSD%E8%AE%B8%E5%8F%AF%E8%AF%81" title="BSD授權條款">BSD授權條款</a>的條款釋出。一大部分Web伺服器使用Nginx<sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[9]</a></sup>，通常作為<a href="/wiki/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1" title="負載均衡">負載均衡器</a>。<sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup>
</p>, <p>Nginx可以部署在網路上使用<a href="/wiki/FastCGI" title="FastCGI">FastCGI</a>指令碼、<a href="/wiki/%E7%AE%80%E5%8D%95%E9%80%9A%E7%94%A8%E7%BD%91%E5%85%B3%E6%8E%A5%E5%8F%A3" title="簡單通用閘道器介面">SCGI</a>處理程式、<a href="/wiki/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BD%91%E5%85%B3%E6%8E%A5%E5%8F%A3" title="Web伺服器閘道器介面">WSGI</a>應用伺服器或<a class="new" href="/w/index.php?title=Phusion_Passenger&amp;action=edit&amp;redlink=1" title="Phusion Passenger（頁面不存在）">Phusion Passenger</a>模組的動態<a class="mw-redirect" href="/wiki/HTTP" title="HTTP">HTTP</a>內容，並可作為軟體<a href="/wiki/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1" title="負載均衡">負載均衡器</a>。<sup class="reference" id="cite_ref-Kleinman_11-0"><a href="#cite_note-Kleinman-11">[11]</a></sup>
</p>, <p>Nginx使用非同步事件驅動的方法來處理請求。Nginx的模組化事件驅動架構<sup class="reference" id="cite_ref-aosabook_12-0"><a href="#cite_note-aosabook-12">[12]</a></sup>可以在高負載下提供更可預測的效能<sup class="reference" id="cite_ref-Configuration_13-0"><a href="#cite_note-Configuration-13">[13]</a></sup>。
</p>, <p>Nginx是一款面向效能設計的HTTP伺服器，相較於<a href="/wiki/Apache_HTTP_Server" title="Apache HTTP Server">Apache</a>、<a href="/wiki/Lighttpd" title="Lighttpd">lighttpd</a>具有占有<a class="mw-redirect" href="/wiki/%E5%86%85%E5%AD%98" title="記憶體">記憶體</a>少，穩定性高等優勢。與舊版本（≤ 2.2）的<a href="/wiki/Apache_HTTP_Server" title="Apache HTTP Server">Apache</a>不同，Nginx不採用每客戶機一執行緒的設計模型，而是充分使用非同步邏輯從而削減了上下文排程開銷，所以並行服務能力更強。整體採用模組化設計，有豐富的模組庫和第三方模組庫，組態靈活。
在Linux作業系統下，Nginx使用epoll事件模型，得益於此，Nginx在Linux作業系統下效率相當高。同時Nginx在OpenBSD或FreeBSD作業系統上採用類似於epoll的高效事件模型kqueue。
</p>, <p>根據<a class="new" href="/w/index.php?title=Netcraft&amp;action=edit&amp;redlink=1" title="Netcraft（頁面不存在）">Netcraft</a>在2016年11月網路伺服器調查<sup class="reference" id="cite_ref-netcraft_14-0"><a href="#cite_note-netcraft-14">[14]</a></sup>，Nginx被發現是所有「活躍」站點（被調查站點的18.22%）和百萬最繁忙站點（被調查站點的27.83%）中使用次數最多的Web伺服器。根據W3Techs的資料，前100萬個網站中的37.7%，前10萬個網站中的49.7%，以及前10000個網站中的57.0%被使用<sup class="reference" id="cite_ref-Usage_of_web_servers_15-0"><a href="#cite_note-Usage_of_web_servers-15">[15]</a></sup>。據BuiltWith統計，在全球前10000個網站中，有38.2%的網站使用Nginx<sup class="reference" id="cite_ref-Builtwith_16-0"><a href="#cite_note-Builtwith-16">[16]</a></sup>。維基百科使用Nginx作為其<span class="ilh-all" data-foreign-title="SSL termination proxy" data-lang-code="en" data-lang-name="英語" data-orig-title="SSL終端代理"><span class="ilh-page"><a class="new" href="/w/index.php?title=SSL%E7%B5%82%E7%AB%AF%E4%BB%A3%E7%90%86&amp;action=edit&amp;redlink=1" title="SSL終端代理（頁面不存在）">SSL終端代理</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/SSL_termination_proxy" title="en:SSL termination proxy"><span dir="auto" lang="en">SSL termination proxy</span></a></span>）</span></span><sup class="reference" id="cite_ref-SSL_termination_17-0"><a href="#cite_note-SSL_termination-17">[17]</a></sup>。從<a href="/wiki/OpenBSD" title="OpenBSD">OpenBSD</a> 5.2版本（2012年11月1日）開始，Nginx成為了OpenBSD基礎系統的一部分，提供了替代Apache 1.3系統的替代方案<sup class="reference" id="cite_ref-openbsd_5.2_18-0"><a href="#cite_note-openbsd_5.2-18">[18]</a></sup>，但是後來被替換為OpenBSD自己的httpd(8)<sup class="reference" id="cite_ref-Nginx_Removed_19-0"><a href="#cite_note-Nginx_Removed-19">[19]</a></sup>。
</p>, <p>Nginx在官方測試的結果中，能夠支援五萬個並列連接，而在實際的運作中，可以支援二萬至四萬個並列連接。
</p>, <p>Nginx 的編寫有一個明確目標就是超越 <a href="/wiki/Apache_HTTP_Server" title="Apache HTTP Server">Apache</a> Web 伺服器的效能<sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[20]</a></sup>。Nginx 提供開箱即用的靜態檔案，使用的記憶體比 Apache 少得多，每秒可以處理大約四倍於 Apache 的請求<sup class="reference" id="cite_ref-21"><a href="#cite_note-21">[21]</a></sup>。 在低並行下 Nginx 的效能與 Apache 相當（有時候還低於），但是在高並行下 Nginx 能保持低資源低消耗高效能。Nginx 的優點還包括：高度模組化的設計，模組編寫簡單，以及設定檔簡潔。
</p>, <p>這種效能提升的代價是降低了靈活性，例如能夠以每個檔案為基礎覆蓋系統範圍的存取設定（ Apache 使用<a href="/wiki/.htaccess" title=".htaccess">.htaccess</a> 檔案來完成這個工作，而 Nginx 並沒有內建這樣的功能）<sup class="reference" id="cite_ref-22"><a href="#cite_note-22">[22]</a></sup>。以前，向 Nginx 添加第三方模組需要使用<a href="/wiki/%E9%9D%99%E6%80%81%E5%BA%93" title="靜態庫">靜態連結</a>的模組從原始碼重新<a href="/wiki/%E7%B7%A8%E8%AD%AF%E5%99%A8" title="編譯器">編譯</a>應用程式。在版本 1.9.11 中部分地克服了這一點，增加了動態模組載入。但是，模組仍然必須與 Nginx 同時編譯，而不是所有的模組都與這個系統相容——有些需要更老的靜態連結過程<sup class="reference" id="cite_ref-23"><a href="#cite_note-23">[23]</a></sup>。
</p>, <p>相比起在Linux下的Nginx，在Windows Server下的Nginx的穩定性較差。而Apache對兩者都有較好的支援。<sup class="reference" id="cite_ref-hostingcanada_24-0"><a href="#cite_note-hostingcanada-24">[24]</a></sup>
</p>, <p>整體採用模組化設計是Nginx的一個重大特點，甚至http伺服器核心功能也是一個模組。舊版本的Nginx的模組是靜態的，添加和刪除模組都要對Nginx進行重新編譯，1.9.11以及更新的版本已經支援動態模組載入。
</p>, <p>截至2017年3月，中國註冊域名總數的9.65%使用 Nginx。<sup class="reference" id="cite_ref-:0_25-0"><a href="#cite_note-:0-25">[25]</a></sup>
</p>, <p>截至2018年1月，Nginx 服務或者代理了全球 30.46% 的網站。<sup class="reference" id="cite_ref-26"><a href="#cite_note-26">[26]</a></sup>
</p>, <p>自PHP-5.3.3起，PHP-FPM加入到了PHP核心，編譯時加上<code>--enable-fpm</code>即可提供支援。PHP-FPM以守護行程在背景執行，Nginx回應請求後，自行處理靜態請求，PHP請求則經過fastcgi_pass交由PHP-FPM處理，處理完畢後返回。Nginx和PHP-FPM的組合，是一種穩定、高效的PHP執行方式，效率要比傳統的Apache和mod_php高出不少。
</p>, <p>PHP-FPM不支援Windows平台，由於沒有fastcgi行程管理器管理<code>php-cgi.exe</code>，因此一旦<code>php-cgi.exe</code>崩潰退出，前端將失去回應，這時Nginx會返回「The page you are looking for is temporarily unavailable. Please try again later.」的錯誤資訊。因此在Windows上用Nginx和<code>php-cgi.exe</code>組合來執行PHP的方式並不可靠，穩定性有待提高。
</p>]