[<p>在<a class="mw-redirect" href="/wiki/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88" title="程式設計">程式設計</a>的<a class="mw-redirect" href="/wiki/%E5%9E%8B%E5%88%A5%E7%B3%BB%E7%B5%B1" title="型別系統">型別系統</a>中，<b>資料類型</b>（英語：<span lang="en">Data type</span>），又稱<b>資料型態</b>、<b>資料型別</b>，是用來約束<a href="/wiki/%E6%95%B0%E6%8D%AE_(%E8%AE%A1%E7%AE%97%E6%9C%BA)" title="資料 (電腦)">資料</a>的解釋。在程式語言中，常見的資料類型包括原始類型（如：<a class="mw-redirect" href="/wiki/%E6%95%B4%E6%95%B8" title="整數">整數</a>、<a class="mw-redirect" href="/wiki/%E6%B5%AE%E9%BB%9E%E6%95%B8" title="浮點數">浮點數</a>或<a class="mw-redirect" href="/wiki/%E5%AD%97%E5%85%83" title="字元">字元</a>）、<a href="/wiki/%E5%A4%9A%E5%85%83%E7%BB%84" title="多元組">多元組</a>、記錄單元、<a class="new" href="/w/index.php?title=%E4%BB%A3%E6%95%B8%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B&amp;action=edit&amp;redlink=1" title="代數資料類型（頁面不存在）">代數資料類型</a>、<a class="mw-redirect" href="/wiki/%E6%8A%BD%E8%B1%A1%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B" title="抽象資料類型">抽象資料類型</a>、<a class="new" href="/w/index.php?title=%E5%8F%83%E8%80%83_(%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8)&amp;action=edit&amp;redlink=1" title="參考 (電腦科學)（頁面不存在）">參考型別</a>、<a href="/wiki/%E7%B1%BB_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)" title="類 (電腦科學)">類別</a>以及<a class="new" href="/w/index.php?title=%E5%87%BD%E5%BC%8F%E7%89%A9%E4%BB%B6&amp;action=edit&amp;redlink=1" title="函式物件（頁面不存在）">函式型別</a>。資料類型描述了<a class="mw-redirect" href="/wiki/%E6%95%B0%E5%80%BC" title="數值">數值</a>的表示法、解釋和結構，並以<a class="mw-redirect" href="/wiki/%E6%BC%94%E7%AE%97%E6%B3%95" title="演算法">演算法</a>操作，或是<a class="mw-redirect" href="/wiki/%E7%89%A9%E4%BB%B6_(%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8)" title="物件 (電腦科學)">物件</a>在記憶體中的儲存區，或者其它儲存裝置。
</p>, <p>所有在電腦中，基於數位電子學的底層資料，都是以<a href="/wiki/%E4%BD%8D%E5%85%83" title="位元">位元</a>（0 或 1）表示。其中資料的最小的定址單位，稱為<a href="/wiki/%E5%AD%97%E8%8A%82" title="位元組">位元組</a>（通常是<a href="/wiki/%E5%85%AB%E4%BD%8D%E5%85%83%E7%B5%84" title="八位元組">八位元</a>，以八個位元為一組）。<a class="mw-redirect" href="/wiki/%E6%A9%9F%E5%99%A8%E7%A2%BC" title="機器碼">機器碼</a>指令處理的單位，稱作<a class="mw-redirect" href="/wiki/%E5%AD%97%E9%95%BF" title="字長">字長</a>（至 2007 年止，一般為 32 或 64 位元）大部分對字長的指令解譯，主要以<a class="mw-redirect" href="/wiki/%E4%BA%8C%E9%80%B2%E5%88%B6" title="二進制">二進制</a>為主，如一個 32 位元的字長，可以表示從 0 至 <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math alttext="{\displaystyle 2^{32}-1}" xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<msup>
<mn>2</mn>
<mrow class="MJX-TeXAtom-ORD">
<mn>32</mn>
</mrow>
</msup>
<mo>−<!-- − --></mo>
<mn>1</mn>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle 2^{32}-1}</annotation>
</semantics>
</math></span><img alt="2^{{32}}-1" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9947d422bba0700fe852bb3e659286e74e4746e4" style="vertical-align: -0.505ex; width:7.042ex; height:2.843ex;"/></span> 的無符號整數值，或者表示從 <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math alttext="{\displaystyle -2^{31}}" xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mo>−<!-- − --></mo>
<msup>
<mn>2</mn>
<mrow class="MJX-TeXAtom-ORD">
<mn>31</mn>
</mrow>
</msup>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle -2^{31}}</annotation>
</semantics>
</math></span><img alt="-2^{{31}}" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/31ee06d9dba263d9dd49ff6f55a7c4b1162c526a" style="vertical-align: -0.505ex; width:4.847ex; height:2.843ex;"/></span> 至 <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math alttext="{\displaystyle 2^{31}-1}" xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<msup>
<mn>2</mn>
<mrow class="MJX-TeXAtom-ORD">
<mn>31</mn>
</mrow>
</msup>
<mo>−<!-- − --></mo>
<mn>1</mn>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle 2^{31}-1}</annotation>
</semantics>
</math></span><img alt="2^{{31}}-1" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d52a7b0343f31ee597fe49fb6e0260024057f185" style="vertical-align: -0.505ex; width:7.042ex; height:2.843ex;"/></span> 的有符號整數值。由於有了<a class="mw-redirect" href="/wiki/%E4%BA%8C%E7%9A%84%E8%A3%9C%E6%95%B8" title="二的補數">二的補數</a>，機器語言和機器大多不需要區分無符號和有符號資料類型。存在著特殊的算術指令，對字長中的位元使用不同的解釋，以此作為<a class="mw-redirect" href="/wiki/%E6%B5%AE%E9%BB%9E%E6%95%B8" title="浮點數">浮點數</a>。
</p>, <p>程式語言提供若干<b>原始資料型別</b>，以作為程式以及專用化<a class="mw-redirect" href="/wiki/%E8%A4%87%E5%90%88%E9%A1%9E%E5%9E%8B" title="複合類型">複合類型</a>的建立基礎。典型的原始資料類型包含各種整數、浮點數以及字串型別。儘管這些建立基礎：<a class="mw-redirect" href="/wiki/%E9%99%A3%E5%88%97" title="陣列">陣列</a>、<a class="new" href="/w/index.php?title=%E7%89%A9%E4%BB%B6%E7%B5%84%E6%88%90&amp;action=edit&amp;redlink=1" title="物件組成（頁面不存在）">記錄單元</a>以及<a class="new" href="/w/index.php?title=%E5%8F%83%E8%80%83_(%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8)&amp;action=edit&amp;redlink=1" title="參考 (電腦科學)（頁面不存在）">參考</a>所聯繫的資料，可能未包括在基本型別，但仍可將其視為若干原始值的聚集。
</p>, <p>這部分可包括以下內容（最終仍取決於程式語言）：
</p>, <p>每一個資料類型都有一個數值上的最大和最小值，稱作<a class="new" href="/w/index.php?title=%E6%95%B8%E5%80%BC%E7%AF%84%E5%9C%8D&amp;action=edit&amp;redlink=1" title="數值範圍（頁面不存在）">數值範圍</a>。了解數值的範圍是很重要的，尤其是當使用較小的型別時，你就只能儲存範圍之內的數值。試圖儲存一個超出其範圍的數值，可能會導致編譯或執行錯誤，或者不正確的計算結果（因為被<a class="new" href="/w/index.php?title=%E6%88%AA%E6%96%B7&amp;action=edit&amp;redlink=1" title="截斷（頁面不存在）">截斷</a>）。
</p>, <p>一個變數的範圍，是基於用以儲存數值的位元組數目，而且整數資料類型通常<span id="noteTag-cite_ref-sup"><sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[註 1]</a></sup></span>能夠儲存 <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math alttext="{\displaystyle 2^{n}}" xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<msup>
<mn>2</mn>
<mrow class="MJX-TeXAtom-ORD">
<mi>n</mi>
</mrow>
</msup>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle 2^{n}}</annotation>
</semantics>
</math></span><img alt="2^{n}" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8226f30650ee4fe4e640c6d2798127e80e9c160d" style="vertical-align: -0.338ex; width:2.381ex; height:2.343ex;"/></span> 數值（此處的 <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math alttext="{\displaystyle n}" xmlns="http://www.w3.org/1998/Math/MathML">
<semantics>
<mrow class="MJX-TeXAtom-ORD">
<mstyle displaystyle="true" scriptlevel="0">
<mi>n</mi>
</mstyle>
</mrow>
<annotation encoding="application/x-tex">{\displaystyle n}</annotation>
</semantics>
</math></span><img alt="n" aria-hidden="true" class="mwe-math-fallback-image-inline" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" style="vertical-align: -0.338ex; width:1.395ex; height:1.676ex;"/></span> 是指<a href="/wiki/%E4%BD%8D%E5%85%83" title="位元">位元</a>）。對於其它的資料類型（例如，<a class="mw-redirect" href="/wiki/%E6%B5%AE%E9%BB%9E%E6%95%B8" title="浮點數">浮點數</a>），其數值範圍更為複雜，且幾乎取決於所使用的儲存方法。還有一些不用完全部的位元，例如，布林只需一個<a href="/wiki/%E4%BD%8D%E5%85%83" title="位元">位元</a>，且表示一個<a class="mw-redirect" href="/wiki/%E4%BA%8C%E9%80%B2%E5%88%B6" title="二進制">二進制</a>值（雖然在實踐中，通常會用完剩餘的 7 個位元）。某些程式語言<span id="noteTag-cite_ref-sup"><sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[註 2]</a></sup></span>也允許反向決定，程式設計者定義解決問題所需的範圍和精度，然後由編譯器自動選擇合適的整數或浮點數。
</p>, <p>下表列出常見的資料類型，及其數值範圍：<span id="noteTag-cite_ref-sup"><sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[註 3]</a></sup></span>
</p>]