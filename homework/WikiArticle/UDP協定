[<p><b>用戶資料報協定</b>（英語：<span lang="en"><b>U</b>ser <b>D</b>atagram <b>P</b>rotocol</span>，縮寫：<b>UDP</b>；又稱<b>用戶資料包協定</b>）是一個簡單的面向<a href="/wiki/%E6%95%B0%E6%8D%AE%E6%8A%A5" title="資料報">資料報</a>的<a class="mw-redirect" href="/wiki/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE" title="通信協定">通信協定</a>，位於<a href="/wiki/OSI%E6%A8%A1%E5%9E%8B" title="OSI模型">OSI模型</a>的<a href="/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82" title="傳輸層">傳輸層</a>。該協定由<span class="ilh-all" data-foreign-title="David P. Reed" data-lang-code="en" data-lang-name="英語" data-orig-title="David P. Reed"><span class="ilh-page"><a class="new" href="/w/index.php?title=David_P._Reed&amp;action=edit&amp;redlink=1" title="David P. Reed（頁面不存在）">David P. Reed</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/David_P._Reed" title="en:David P. Reed"><span dir="auto" lang="en">David P. Reed</span></a></span>）</span></span>在1980年設計且在<a class="external mw-magiclink-rfc" href="https://tools.ietf.org/html/rfc768" rel="nofollow">RFC 768</a>中被規範。典型網路上的眾多使用UDP協定的關鍵應用在一定程度上是相似的。
</p>, <p>在<a class="mw-redirect" href="/wiki/TCP/IP" title="TCP/IP">TCP/IP</a>模型中，UDP為<a href="/wiki/%E7%BD%91%E7%BB%9C%E5%B1%82" title="網路層">網路層</a>以上和<a href="/wiki/%E5%BA%94%E7%94%A8%E5%B1%82" title="應用層">應用層</a>以下提供了一個簡單的介面。UDP只提供<a href="/wiki/%E6%95%B0%E6%8D%AE" title="資料">資料</a>的不可靠傳遞，它一旦把應用程式發給網路層的資料傳送出去，就不保留資料備份（所以UDP有時候也被認為是不可靠的資料報協定）。UDP在IP資料報的頭部僅僅加入了復用和資料校驗欄位。
</p>, <p>UDP適用於不需要或在<a href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F" title="電腦程式">程式</a>中執行<a href="/wiki/%E9%94%99%E8%AF%AF%E6%A3%80%E6%B5%8B%E4%B8%8E%E7%BA%A0%E6%AD%A3" title="錯誤檢測與糾正">錯誤檢查和糾正</a>的<a href="/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F" title="應用程式">應用</a>，它避免了<a href="/wiki/%E5%8D%8F%E8%AE%AE%E6%A0%88" title="協定棧">協定棧</a>中此類處理的<span class="ilh-all" data-foreign-title="Overhead (computing)" data-lang-code="en" data-lang-name="英語" data-orig-title="开销"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E5%BC%80%E9%94%80&amp;action=edit&amp;redlink=1" title="開銷（頁面不存在）">開銷</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Overhead_(computing)" title="en:Overhead (computing)"><span dir="auto" lang="en">Overhead (computing)</span></a></span>）</span></span>。對時間有較高要求的應用程式通常使用UDP，因為丟棄封包比等待或重傳導致延遲更可取。
</p>, <p>由於UDP缺乏<a href="/wiki/%E5%8F%AF%E9%9D%A0%E6%80%A7_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C)" title="可靠性 (電腦網路)">可靠性</a>且屬於<a href="/wiki/%E7%84%A1%E9%80%A3%E6%8E%A5%E5%BC%8F%E9%80%9A%E8%A8%8A" title="無連接式通訊">無連接</a>協定，所以應用程式通常必須容許一些<a href="/wiki/%E4%B8%A2%E5%8C%85" title="丟包">遺失</a>、錯誤或重複的<a class="mw-redirect" href="/wiki/%E6%95%B0%E6%8D%AE%E5%8C%85" title="封包">封包</a>。某些應用程式（如<a class="mw-redirect" href="/wiki/TFTP" title="TFTP">TFTP</a>）可能會根據需要在應用程式層中添加基本的可靠性機制。<sup class="reference" id="cite_ref-forouzan_1-0"><a href="#cite_note-forouzan-1">[1]</a></sup>
</p>, <p>一些應用程式不太需要可靠性機制，甚至可能因為引入可靠性機制而降低效能，所以它們使用UDP這種缺乏可靠性的協定。串流媒體，即時多人遊戲和IP語音（<a href="/wiki/VoIP" title="VoIP">VoIP</a>）是經常使用UDP的應用程式。
在這些特定應用中，丟包通常不是重大問題。如果應用程式需要高度可靠性，則可以使用諸如<a href="/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE" title="傳輸控制協定">TCP</a>之類的協定。
</p>, <p>例如，在VoIP中<a href="/wiki/%E4%BE%86%E5%9B%9E%E9%80%9A%E8%A8%8A%E5%BB%B6%E9%81%B2" title="來回通訊延遲">延遲</a>和<a href="/wiki/%E6%8A%96%E5%8A%A8" title="抖動">抖動</a>是主要問題。如果使用TCP，那麼任何封包遺失或錯誤都將導致抖動，因為TCP在請求及重傳遺失資料時不向應用程式提供後續資料。如果使用UDP，那麼應用程式則需要提供必要的握手，例如即時確認已收到的訊息。
</p>, <p>由於UDP缺乏<a href="/wiki/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6" title="擁塞控制">擁塞控制</a>，所以需要基於網路的機制來減少因失控和高速UDP流量負荷而導致的擁塞崩潰效應。換句話說，因為UDP傳送端無法檢測擁塞，所以像使用包佇列和丟棄技術的路由器之類的網路基礎裝置會被用於降低UDP過大流量。<a href="/wiki/%E6%95%B0%E6%8D%AE%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE" title="資料擁塞控制協定">資料擁塞控制協定</a>（DCCP）設計成通過在諸如串流媒體類型的高速率UDP流中增加主機擁塞控制，來減小這個潛在的問題。
</p>, <p>許多關鍵的網際網路應用程式使用UDP<sup class="reference" id="cite_ref-kuroseross_2-0"><a href="#cite_note-kuroseross-2">[2]</a></sup>，包括：
</p>, <p>音訊、視訊、<a class="mw-redirect" href="/wiki/%E7%B7%9A%E4%B8%8A%E9%81%8A%E6%88%B2" title="線上遊戲">線上遊戲</a>流量通常使用UDP傳輸。
即時影片流和音訊流應用程式旨在處理偶爾遺失、錯誤的封包，因此只會發生品質輕微下降，而避免了重傳封包帶來的高延遲。
由於TCP和UDP都在同一網路上執行，因此一些企業發現來自這些即時應用程式的UDP流量影響了使用TCP的應用程式的效能，例如銷售、會計和資料庫系統。
當TCP檢測到封包遺失時，它將限制其資料速率使用率。由於即時和業務應用程式對企業都很重要，因此一些人認為開發服務品質解決方案至關重要。<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>
</p>, <p>某些<a class="mw-redirect" href="/wiki/VPN" title="VPN">VPN</a>應用（如<a href="/wiki/OpenVPN" title="OpenVPN">OpenVPN</a>）使用UDP並可以在<a href="/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F" title="應用程式">應用程式</a>級別實現可靠連接和錯誤檢查。
</p>, <p>UDP報頭包括4個欄位，每個欄位占用2個位元組（即16個位元）。在IPv4中，「來源連接埠」和「校驗和」是可選欄位（以粉色背景標出）。在IPv6中，只有來源連接埠是可選欄位。
各16<a href="/wiki/%E4%BD%8D%E5%85%83" title="位元">bit</a>的來源埠和目的埠用來標記傳送和接受的應用行程。因為UDP不需要應答，所以來源埠是可選的，如果來源埠不用，那麼置為零。在目的埠後面是長度固定的以位元組為單位的長度域，用來指定UDP資料報包括資料部分的長度，長度最小值為8byte。首部剩下地16bit是用來對首部和資料部分一起做<a href="/wiki/%E6%A0%A1%E9%AA%8C%E5%92%8C" title="校驗和">校驗和</a>（Checksum）的，這部分是可選的，但在實際應用中一般都使用這一功能。
</p>, <p>當UDP執行在IPv4之上時，為了能夠計算校驗和，需要在UDP封包前添加一個「偽頭部」。偽頭部包括了IPv4頭部中的一些資訊，但它並不是傳送IP封包時使用的IP封包的頭部，而只是一個用來計算校驗和而已。
</p>, <p>當UDP執行於IPV6之上時，校驗和是必須的，其計算方法位於<a href="/wiki/RFC" title="RFC">RFC</a> <a class="extiw" href="//tools.ietf.org/html/rfc2460" title="rfc:2460">2460</a>:
<style data-mw-deduplicate="TemplateStyles:r51231769">.mw-parser-output .templatequote{margin-top:0;overflow:hidden}.mw-parser-output .templatequote .templatequotecite{line-height:1em;text-align:left;padding-left:2em;margin-top:0}.mw-parser-output .templatequote .templatequotecite cite{font-size:small}</style>
</p>, <p>任何包含來自IP頭位址的傳輸層或其他上層協定，其校驗和的計算必須被修改，以適應IPv6的128位元ip位址。<sup class="reference" id="cite_ref-rfc2460_4-0"><a href="#cite_note-rfc2460-4">[4]</a></sup></p>, <p>IPv6偽頭部是生成校驗和所用的資料。
</p>]