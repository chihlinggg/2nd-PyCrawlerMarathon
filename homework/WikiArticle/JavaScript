[<p><span lang="en"><b>JavaScript</b></span>（通常縮寫為<b>JS</b>）是一種<a href="/wiki/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80" title="高階語言">進階</a>的、<a href="/wiki/%E7%9B%B4%E8%AD%AF%E8%AA%9E%E8%A8%80" title="直譯語言">直譯</a>的<a href="/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" title="程式語言">程式語言</a><sup class="reference" id="cite_ref-:0_8-0"><a href="#cite_note-:0-8">[8]</a></sup>。JavaScript是一門基於原型、函式先行的語言<sup class="reference" id="cite_ref-:1_9-0"><a href="#cite_note-:1-9">[9]</a></sup>，是一門多範式的語言，它支援<a href="/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" title="物件導向程式設計">物件導向</a>編程，<a class="mw-redirect" href="/wiki/%E5%91%BD%E4%BB%A4%E5%BC%8F%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" title="指令式程式設計語言">指令式程式設計</a>，以及<a class="mw-redirect" href="/wiki/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" title="函式語言程式設計語言">函式語言程式設計</a>。它提供語法來操控文字、<a href="/wiki/%E6%95%B0%E7%BB%84" title="陣列">陣列</a>、日期以及<a href="/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" title="正規表示式">正規表示式</a>等，不支援<a href="/wiki/I/O" title="I/O">I/O</a>，比如網路、儲存和圖形等，但這些都可以由它的宿主環境提供支援。它已經由ECMA（歐洲電腦製造商協會）透過<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a>實作語言的標準化<sup class="reference" id="cite_ref-:0_8-1"><a href="#cite_note-:0-8">[8]</a></sup>。它被世界上的絕大多數網站所使用，也被世界主流<a class="mw-redirect" href="/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8" title="瀏覽器">瀏覽器</a>（<a href="/wiki/Google_Chrome" title="Google Chrome">Chrome</a>、<a href="/wiki/Internet_Explorer" title="Internet Explorer">IE</a>、<a class="mw-redirect" href="/wiki/Firefox" title="Firefox">Firefox</a>、<a href="/wiki/Safari" title="Safari">Safari</a>、<a href="/wiki/Opera%E9%9B%BB%E8%85%A6%E7%80%8F%E8%A6%BD%E5%99%A8" title="Opera電腦瀏覽器">Opera</a>）支援。
</p>, <p>雖然JavaScript與<a href="/wiki/Java" title="Java">Java</a>這門語言不管是在名字上，或是在語法上都有很多相似性，但這兩門程式語言從設計之初就有很大的不同，JavaScript的語言設計主要受到了<a href="/wiki/Self" title="Self">Self</a>（一種原型程式設計語言）和<a href="/wiki/Scheme" title="Scheme">Scheme</a>（一門函式語言程式設計語言）的影響<sup class="reference" id="cite_ref-:1_9-1"><a href="#cite_note-:1-9">[9]</a></sup>。在語法結構上它又與<a href="/wiki/C%E8%AF%AD%E8%A8%80" title="C語言">C語言</a>有很多相似（例如if條件語句、switch語句、while迴圈、do-while迴圈等）<sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup>。
</p>, <p>在客戶端，JavaScript在傳統意義上被實作為一種解釋語言，但在最近，它已經可以被<a href="/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF" title="即時編譯">即時編譯</a>（JIT）執行。隨著最新的<a href="/wiki/HTML5" title="HTML5">HTML5</a>和<a class="mw-redirect" href="/wiki/CSS3" title="CSS3">CSS3</a>語言標準的推行它還可用於遊戲、桌面和行動應用程式的開發和在伺服器端網路環境執行，如<a href="/wiki/Node.js" title="Node.js">Node.js</a>。
</p>, <p>1993年，<a class="mw-redirect" href="/wiki/%E4%BC%8A%E5%88%A9%E8%AB%BE%E5%A4%A7%E5%AD%B8%E5%8E%84%E5%B7%B4%E7%B4%8D-%E9%A6%99%E6%AA%B3%E5%88%86%E6%A0%A1" title="伊利諾大學厄巴納-香檳分校">伊利諾大學厄巴納-香檳分校</a>的<a href="/wiki/%E5%9B%BD%E5%AE%B6%E8%B6%85%E7%BA%A7%E7%94%B5%E8%84%91%E5%BA%94%E7%94%A8%E4%B8%AD%E5%BF%83" title="國家超級電腦應用中心">國家超級電腦應用中心</a>（NCSA）發表了<a class="mw-redirect" href="/wiki/NCSA_Mosaic" title="NCSA Mosaic">NCSA Mosaic</a>，這是最早流行的圖形介面網頁瀏覽器，它在<a class="mw-redirect" href="/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" title="全球資訊網">全球資訊網</a>的普及上發揮了重要作用。1994年，一家名為<a class="mw-redirect" href="/wiki/Mosaic_Communications" title="Mosaic Communications">Mosaic Communications</a>的公司在<a href="/wiki/%E5%B1%B1%E6%99%AF%E5%9F%8E_(%E5%8A%A0%E5%88%A9%E7%A6%8F%E5%B0%BC%E4%BA%9A%E5%B7%9E)" title="山景城 (加利福尼亞州)">加州山景城</a>成立了，並雇用了許多原來的NCSA Mosaic開發者用來開發<a class="mw-redirect" href="/wiki/Mosaic_Netscape" title="Mosaic Netscape">Mosaic Netscape</a>，該公司的目標是取代NCSA Mosaic成為世界第一的網頁瀏覽器。第一個版本的網頁瀏覽器Mosaic Netscape 0.9於1994年底發布。在四個月內，已經佔據了四分之三的瀏覽器市場，並成為1990年代網際網路的主要瀏覽器。為避免NCSA的商標所有權問題，該瀏覽器於同年更名為Netscape Navigator，該公司命名為Netscape Communications。網景預見到網路需要變得更動態。公司的創始人<a href="/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E5%AE%89%E5%BE%B7%E6%A3%AE" title="馬克·安德森">馬克·安德森</a>認為<a href="/wiki/HTML" title="HTML">HTML</a>需要一種<a href="/wiki/%E8%83%B6%E6%B0%B4%E8%AF%AD%E8%A8%80" title="膠水語言">膠水語言</a>，讓網頁設計師和兼職程式設計師可以很容易地使用它來組裝圖片和外掛程式之類的元件，且程式碼可以直接編寫在網頁標記中。
</p>, <p>1995年，網景招募了<a href="/wiki/%E5%B8%83%E8%98%AD%E7%99%BB%C2%B7%E8%89%BE%E5%85%8B" title="布蘭登·艾克">布蘭登·艾克</a>，目標是把<a href="/wiki/Scheme" title="Scheme">Scheme</a>語言嵌入到Netscape Navigator瀏覽器當中<sup class="reference" id="cite_ref-11"><a href="#cite_note-11">[11]</a></sup>。但更早之前，網景已經跟<a href="/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6" title="昇陽電腦">昇陽</a>合作在Netscape Navigator中支援<a href="/wiki/Java" title="Java">Java</a>，這時網景內部產生激烈的爭論<sup class="reference" id="cite_ref-12"><a href="#cite_note-12">[12]</a></sup>。後來網景決定發明一種與Java搭配使用的輔助手稿語言並且語法上有些類似<sup class="reference" id="cite_ref-13"><a href="#cite_note-13">[13]</a></sup>，這個決策導致排除了採用現有的語言，例如<a href="/wiki/Perl" title="Perl">Perl</a>、<a href="/wiki/Python" title="Python">Python</a>、<a href="/wiki/Tcl" title="Tcl">Tcl</a>或Scheme。為了在其他競爭提案中捍衛JavaScript這個想法，公司需要有一個可以運作的原型。艾克在1995年5月僅花了十天時間就把原型設計出來了。
</p>, <p>最初命名為<b>Mocha</b>，1995年9月在Netscape Navigator 2.0的Beta版中改名為<b>LiveScript</b>，同年12月，Netscape Navigator 2.0 Beta 3中部署時被重新命名為<b>JavaScript</b><sup class="reference" id="cite_ref-press_release_1-1"><a href="#cite_note-press_release-1">[1]</a></sup><sup class="reference" id="cite_ref-techvision_14-0"><a href="#cite_note-techvision-14">[14]</a></sup>，當時網景公司與昇陽電腦公司組成的開發聯盟為了讓這門語言搭上Java這個程式語言「熱詞」，因此將其臨時改名為JavaScript，日後這成為大眾對這門語言有諸多誤解的原因之一<sup class="reference" id="cite_ref-15"><a href="#cite_note-15">[15]</a></sup>。
</p>, <p>JavaScript推出後在瀏覽器上大獲成功，<a href="/wiki/%E5%BE%AE%E8%BD%AF" title="微軟">微軟公司</a>在不久後就為<a href="/wiki/Internet_Explorer_3" title="Internet Explorer 3">Internet Explorer 3</a>瀏覽器推出了<a href="/wiki/JScript" title="JScript">JScript</a>，以與處於市場領導地位的網景產品同台競爭。JScript也是一種JavaScript實作，這兩個JavaScript語言版本在瀏覽器端共存意味著語言標準化的缺失，發展初期，JavaScript的標準並未確定，同期有網景的JavaScript，微軟的JScript雙峰並峙。除此之外，微軟也在網頁技術上加入了不少專屬物件，使不少網頁使用非微軟平台及瀏覽器無法正常顯示<sup class="reference" id="cite_ref-O'Reilly-2001_16-0"><a href="#cite_note-O'Reilly-2001-16">[16]</a></sup><sup class="reference" id="cite_ref-17"><a href="#cite_note-17">[17]</a></sup>，導致在<a href="/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%A7%E6%88%98" title="瀏覽器大戰">瀏覽器大戰</a>期間網頁設計者通常會把「用Netscape可達到最佳效果」或「用IE可達到最佳效果」的標誌放在首頁<sup class="reference" id="cite_ref-18"><a href="#cite_note-18">[18]</a></sup>。隨著<a href="/wiki/Internet_Explorer_4" title="Internet Explorer 4">Internet Explorer 4</a>的發布，微軟引入了<a href="/wiki/%E5%8B%95%E6%85%8BHTML" title="動態HTML">動態HTML</a>的概念，但語言實現和不同專有化的<a class="mw-redirect" href="/wiki/%E6%96%87%E4%BB%B6%E7%89%A9%E4%BB%B6%E6%A8%A1%E5%9E%8B" title="文件物件模型">文件物件模型</a>的差異仍然存在，成為網路上普及使用JavaScript的阻礙<sup class="reference" id="cite_ref-O'Reilly-2001_16-1"><a href="#cite_note-O'Reilly-2001-16">[16]</a></sup>。
</p>, <p>1996年11月，網景正式向<a href="/wiki/Ecma%E5%9B%BD%E9%99%85" title="Ecma國際">ECMA</a>（歐洲電腦製造商協會）提交語言標準。1997年6月，ECMA以JavaScript語言為基礎制定了<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a>標準規範ECMA-262。JavaScript成為了ECMAScript最著名的實現之一<sup class="reference" id="cite_ref-:2_19-0"><a href="#cite_note-:2-19">[19]</a></sup>。除此之外，<a href="/wiki/ActionScript" title="ActionScript">ActionScript</a>和<a href="/wiki/JScript" title="JScript">JScript</a>也都是<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a>規範的實作語言。儘管JavaScript作為給非程式人員的手稿語言，而非作為給程式人員的程式語言來推廣和宣傳，但是JavaScript具有非常豐富的特性。
</p>, <p>一般來說，完整的JavaScript包括以下幾個部分：
</p>, <p>JavaScript的基本特點如下：
</p>, <p>JavaScript常用來完成以下任務：
</p>, <p>不同於<a class="mw-redirect" href="/wiki/%E4%BC%BA%E6%9C%8D%E5%99%A8" title="伺服器">伺服器</a>端手稿語言，例如<a href="/wiki/PHP" title="PHP">PHP</a>與<a href="/wiki/Active_Server_Pages" title="Active Server Pages">ASP</a>，JavaScript主要被作為<a href="/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF" title="客戶端">客戶端</a>手稿語言在用戶的瀏覽器上運行，不需要伺服器的支援。所以在早期程式設計師比較青睞於JavaScript以減少對伺服器的負擔，而與此同時也帶來另一個問題：安全性。而隨著伺服器變得強大，現在的程式員更喜歡運行於伺服器端的指令碼以保證安全，但JavaScript仍然以其跨平台、容易上手等優勢大行其道。同時，有些特殊功能（如AJAX）必須依賴JavaScript在客戶端進行支援。隨著引擎如V8和框架如<a href="/wiki/Node.js" title="Node.js">Node.js</a>的發展，及其<a class="mw-redirect" href="/wiki/%E4%BA%8B%E4%BB%B6%E9%A9%85%E5%8B%95" title="事件驅動">事件驅動</a>及<a class="mw-redirect" href="/wiki/%E5%BC%82%E6%AD%A5IO" title="非同步IO">異步IO</a>等特性，JavaScript逐漸被用來編寫<a class="mw-redirect" href="/wiki/%E4%BC%BA%E6%9C%8D%E5%99%A8" title="伺服器">伺服器</a>端程式。且在近幾年中，<a href="/wiki/Node.js" title="Node.js">Node.js</a>的出世，讓JavaScript也具有了一定的伺服器功能，且<mark class="template-facttext" title="需要提供文獻來源">在某些方面比PHP的效果更為顯著</mark><sup class="noprint Template-Fact"><a href="/wiki/Wikipedia:%E5%88%97%E6%98%8E%E6%9D%A5%E6%BA%90" title="Wikipedia:列明來源"><span style="white-space: nowrap;" title="來源請求開始於2018年11月20日。">[來源請求]</span></a></sup>。
</p>, <p>JavaScript從支援許多C語言的結構化編程語法（例如if條件語句、while迴圈、switch語句、do-while迴圈等）。但作用域是一個例外：JavaScript只支援使用var關鍵字來定義變數的函式作用域。ECMAScript加入了let關鍵字來支援塊級作用域，意味著JavaScript現在既支援函式作用域又支援塊級作用域。正如C語言一樣，JavaScript中的表達式和語句是不同的。與C不同，JavaScript支援自動在語句末添加分號。
</p>, <p>正如大部分程式語言，類型與值而不是與變數關聯。例如x變數可以為數值，隨後又可被賦值為字串。JavaScript提供了包括<a href="/wiki/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B" title="鴨子型別">鴨子型別</a>在內的方法來檢測變數類型。
</p>, <p><a href="/wiki/Eval" title="Eval">Eval</a>() 函式可以直接執行一個JavaScript函式。例如：
</p>, <p>JavaScript是一種<a class="mw-redirect" href="/wiki/%E8%85%B3%E6%9C%AC%E8%AA%9E%E8%A8%80" title="手稿語言">手稿語言</a>，其<a class="mw-redirect" href="/wiki/%E5%8E%9F%E5%A7%8B%E7%A2%BC" title="原始碼">原始碼</a>在發往客戶端執行之前不需經過編譯，而是將文字格式的字元代碼發送給瀏覽器由瀏覽器解釋執行。<a href="/wiki/%E7%9B%B4%E8%AD%AF%E8%AA%9E%E8%A8%80" title="直譯語言">直譯語言</a>的弱點是安全性較差，而且在JavaScript中，如果一條執行不了，那麼下面的語言也無法執行。而其解決辦法就是於使用<a href="/wiki/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86" title="例外處理">例外處理</a><code>try{}catch(){}</code>︰
</p>, <p>JavaScript被歸類為直譯語言，因為目前主流的引擎都是每次執行時載入程式碼並解譯。V8是將所有程式碼解譯後再開始執行，其他引擎則是逐行解譯（SpiderMonkey會將解譯過的指令暫存，以提高效能，稱為<a href="/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF" title="即時編譯">即時編譯</a>），但由於V8的核心部份多數用JavaScript撰寫（而SpiderMonkey是用C++），因此在不同的測試上，兩者效能互有優劣。
</p>, <p>與其相對應的是<a href="/wiki/%E7%B7%A8%E8%AD%AF%E8%AA%9E%E8%A8%80" title="編譯語言">編譯語言</a>，例如<a href="/wiki/C%E8%AF%AD%E8%A8%80" title="C語言">C語言</a>，以編譯語言編寫的程式在執行之前，必須經過編譯，將程式碼編譯為機器碼，再加以執行。
</p>, <p>以下是一個簡單的JavaScript <a href="/wiki/Hello_World" title="Hello World">Hello World</a>︰
</p>, <p>或是在<a class="mw-redirect" href="/wiki/%E7%80%8F%E8%A6%BD%E5%99%A8" title="瀏覽器">瀏覽器</a>的<a href="/wiki/%E5%9C%B0%E5%9D%80%E6%A0%8F" title="網址列">網址列</a>中使用<code>javascript:</code>，以互動方式表示：
</p>, <p>JavaScript最初開發於1996年，被使用於<a class="mw-redirect" href="/wiki/Netscape_Navigator" title="Netscape Navigator">Netscape Navigator</a>網頁瀏覽器。同年微軟在Internet Explorer發布了一個實作。由於商標問題，這項實作被命名為<a href="/wiki/JScript" title="JScript">JScript</a>。1997年，JavaScript已經被<a href="/wiki/%E7%B6%B2%E6%99%AF" title="網景">網景</a>公司提交給<a href="/wiki/Ecma%E5%9B%BD%E9%99%85" title="Ecma國際">ECMA</a>制定為標準，稱之為<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a>，標準編號<a class="mw-redirect" href="/wiki/ECMA-262" title="ECMA-262">ECMA-262</a>。使用顯式版本號聲明對語言的參照，作爲一項Mozilla的特性，已在較新版本中被移除（至少為 <a class="mw-redirect" href="/wiki/Firefox" title="Firefox">Firefox</a> 59）。<a class="mw-redirect" href="/wiki/Firefox" title="Firefox">Firefox</a> 4 是最後一個需要顯式地在參照時聲明明確版本號的版本（1.8.5）。
</p>, <p>下列表格的資訊基於多個參考來源<sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[20]</a></sup><sup class="reference" id="cite_ref-21"><a href="#cite_note-21">[21]</a></sup><sup class="reference" id="cite_ref-22"><a href="#cite_note-22">[22]</a></sup><sup class="reference" id="cite_ref-23"><a href="#cite_note-23">[23]</a></sup>：
</p>, <p class="mw-empty-elt">
</p>, <p class="mw-empty-elt">
</p>]